"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import jetpack.proto.runtime.v1alpha1.remote_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PersistedTask(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PersistedTask._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: PersistedTask._Status.ValueType  # 0
        CREATED: PersistedTask._Status.ValueType  # 1
        WAITING: PersistedTask._Status.ValueType  # 2
        READY: PersistedTask._Status.ValueType  # 3
        RUNNING: PersistedTask._Status.ValueType  # 4
        SUCCEEDED: PersistedTask._Status.ValueType  # 5
        CANCELLING: PersistedTask._Status.ValueType  # 6
        CANCELLED: PersistedTask._Status.ValueType  # 7
        FAILING: PersistedTask._Status.ValueType  # 8
        FAILED: PersistedTask._Status.ValueType  # 9
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    UNKNOWN: PersistedTask.Status.ValueType  # 0
    CREATED: PersistedTask.Status.ValueType  # 1
    WAITING: PersistedTask.Status.ValueType  # 2
    READY: PersistedTask.Status.ValueType  # 3
    RUNNING: PersistedTask.Status.ValueType  # 4
    SUCCEEDED: PersistedTask.Status.ValueType  # 5
    CANCELLING: PersistedTask.Status.ValueType  # 6
    CANCELLED: PersistedTask.Status.ValueType  # 7
    FAILING: PersistedTask.Status.ValueType  # 8
    FAILED: PersistedTask.Status.ValueType  # 9

    class _ExecutionMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ExecutionModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PersistedTask._ExecutionMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        EXECUTION_JOB: PersistedTask._ExecutionMode.ValueType  # 0
        EXECUTION_WORKER_PUSH: PersistedTask._ExecutionMode.ValueType  # 1
        """PULL = 2;"""

    class ExecutionMode(_ExecutionMode, metaclass=_ExecutionModeEnumTypeWrapper):
        pass

    EXECUTION_JOB: PersistedTask.ExecutionMode.ValueType  # 0
    EXECUTION_WORKER_PUSH: PersistedTask.ExecutionMode.ValueType  # 1
    """PULL = 2;"""


    ID_FIELD_NUMBER: builtins.int
    QUALIFIED_SYMBOL_FIELD_NUMBER: builtins.int
    ENCODED_ARGS_FIELD_NUMBER: builtins.int
    MANIFEST_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    APP_NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    PARENT_TASK_ID_FIELD_NUMBER: builtins.int
    WITH_CHECKPOINTING_FIELD_NUMBER: builtins.int
    CURRENT_ITERATION_FIELD_NUMBER: builtins.int
    EXECUTION_MODE_FIELD_NUMBER: builtins.int
    id: typing.Text
    qualified_symbol: typing.Text
    encoded_args: builtins.bytes
    manifest: builtins.bytes
    """sdk version? to build command?
    or just store the command?
    """

    status: global___PersistedTask.Status.ValueType
    @property
    def result(self) -> jetpack.proto.runtime.v1alpha1.remote_pb2.Result: ...
    app_name: typing.Text
    project_id: typing.Text
    parent_task_id: typing.Text
    with_checkpointing: builtins.bool
    current_iteration: builtins.int
    execution_mode: global___PersistedTask.ExecutionMode.ValueType
    def __init__(self,
        *,
        id: typing.Text = ...,
        qualified_symbol: typing.Text = ...,
        encoded_args: builtins.bytes = ...,
        manifest: builtins.bytes = ...,
        status: global___PersistedTask.Status.ValueType = ...,
        result: typing.Optional[jetpack.proto.runtime.v1alpha1.remote_pb2.Result] = ...,
        app_name: typing.Text = ...,
        project_id: typing.Text = ...,
        parent_task_id: typing.Text = ...,
        with_checkpointing: builtins.bool = ...,
        current_iteration: builtins.int = ...,
        execution_mode: global___PersistedTask.ExecutionMode.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_name",b"app_name","current_iteration",b"current_iteration","encoded_args",b"encoded_args","execution_mode",b"execution_mode","id",b"id","manifest",b"manifest","parent_task_id",b"parent_task_id","project_id",b"project_id","qualified_symbol",b"qualified_symbol","result",b"result","status",b"status","with_checkpointing",b"with_checkpointing"]) -> None: ...
global___PersistedTask = PersistedTask

class CheckpointTracker(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class CheckpointsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    CHECKPOINTS_FIELD_NUMBER: builtins.int
    id: typing.Text
    @property
    def checkpoints(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """map<childKey, childPersistedTaskID>"""
        pass
    def __init__(self,
        *,
        id: typing.Text = ...,
        checkpoints: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["checkpoints",b"checkpoints","id",b"id"]) -> None: ...
global___CheckpointTracker = CheckpointTracker
