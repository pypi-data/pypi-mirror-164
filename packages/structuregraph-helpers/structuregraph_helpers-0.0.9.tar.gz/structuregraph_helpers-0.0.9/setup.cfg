[metadata]
name = structuregraph_helpers
version = 0.0.9
description = Utilities for working with structure graphs
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/kjappelbaum/structuregraph-helpers
download_url = https://github.com/kjappelbaum/structuregraph-helpers/releases
project_urls = 
	Bug Tracker = https://github.com/kjappelbaum/structuregraph-helpers/issues
	Source Code = https://github.com/kjappelbaum/structuregraph-helpers
author = Kevin M. Jablonka
author_email = mail@kjablonka.com
maintainer = Kevin M. Jablonka
maintainer_email = mail@kjablonka.com
license = MIT
license_file = LICENSE
classifiers = 
	Development Status :: 1 - Planning
	Environment :: Console
	Intended Audience :: Developers
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Framework :: Pytest
	Framework :: tox
	Framework :: Sphinx
	Programming Language :: Python
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3 :: Only
keywords = 
	materials
	pymatgen
	structuregraph
	graph
	crystallography

[options]
install_requires = 
	pymatgen
	pyyaml
	loguru
	click
zip_safe = false
include_package_data = True
python_requires = >=3.7
packages = find:
package_dir = 
	= src

[options.packages.find]
where = src

[options.extras_require]
plotting = 
	plotly
lint = 
	isort
	black
	flake8
	pre-commit
	bumpversion
tests = 
	pytest
	tox
	coverage
docs = 
	sphinx
	sphinx_book_theme
	sphinx-click
	sphinx-autodoc-typehints
	sphinx_automodapi
	sphinx_copybutton

[options.entry_points]
console_scripts = 
	sgh.create_hash = structuregraph_helpers.cli:get_hash
	sgh.create_hashes = structuregraph_helpers.cli:get_hashes

[doc8]
max-line-length = 120

[coverage:run]
branch = True
source = structuregraph_helpers
omit = 
	tests/*
	docs/*

[coverage:paths]
source = 
	src/structuregraph_helpers
	.tox/*/lib/python*/site-packages/structuregraph_helpers

[coverage:report]
show_missing = True
exclude_lines = 
	pragma: no cover
	raise NotImplementedError
	if __name__ == .__main__.:
	def __str__
	def __repr__

[darglint]
docstring_style = google
strictness = short

[egg_info]
tag_build = 
tag_date = 0

