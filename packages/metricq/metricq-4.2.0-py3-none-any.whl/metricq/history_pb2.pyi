"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class HistoryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _RequestType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RequestTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[HistoryRequest._RequestType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        AGGREGATE_TIMELINE: HistoryRequest._RequestType.ValueType  # 0
        """Timeline of aggregates over |start_time, end_time[ with the specified interval_max"""

        AGGREGATE: HistoryRequest._RequestType.ValueType  # 1
        """Single aggregate value over [start_time, end_time[ in aggregates"""

        LAST_VALUE: HistoryRequest._RequestType.ValueType  # 2
        """Single last value in values (0 values if no values in DB)"""

        FLEX_TIMELINE: HistoryRequest._RequestType.ValueType  # 3
        """Either aggregates or values in |start_time, end_time[ depending on the specified interval_max"""

    class RequestType(_RequestType, metaclass=_RequestTypeEnumTypeWrapper):
        pass

    AGGREGATE_TIMELINE: HistoryRequest.RequestType.ValueType  # 0
    """Timeline of aggregates over |start_time, end_time[ with the specified interval_max"""

    AGGREGATE: HistoryRequest.RequestType.ValueType  # 1
    """Single aggregate value over [start_time, end_time[ in aggregates"""

    LAST_VALUE: HistoryRequest.RequestType.ValueType  # 2
    """Single last value in values (0 values if no values in DB)"""

    FLEX_TIMELINE: HistoryRequest.RequestType.ValueType  # 3
    """Either aggregates or values in |start_time, end_time[ depending on the specified interval_max"""


    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    INTERVAL_MAX_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    start_time: builtins.int
    end_time: builtins.int
    interval_max: builtins.int
    type: global___HistoryRequest.RequestType.ValueType
    """default: AGGREGATE_TIMELINE"""

    def __init__(self,
        *,
        start_time: builtins.int = ...,
        end_time: builtins.int = ...,
        interval_max: builtins.int = ...,
        type: global___HistoryRequest.RequestType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","interval_max",b"interval_max","start_time",b"start_time","type",b"type"]) -> None: ...
global___HistoryRequest = HistoryRequest

class HistoryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Aggregate(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        MINIMUM_FIELD_NUMBER: builtins.int
        MAXIMUM_FIELD_NUMBER: builtins.int
        SUM_FIELD_NUMBER: builtins.int
        COUNT_FIELD_NUMBER: builtins.int
        INTEGRAL_FIELD_NUMBER: builtins.int
        ACTIVE_TIME_FIELD_NUMBER: builtins.int
        minimum: builtins.float
        maximum: builtins.float
        sum: builtins.float
        count: builtins.int
        integral: builtins.float
        active_time: builtins.int
        def __init__(self,
            *,
            minimum: builtins.float = ...,
            maximum: builtins.float = ...,
            sum: builtins.float = ...,
            count: builtins.int = ...,
            integral: builtins.float = ...,
            active_time: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["active_time",b"active_time","count",b"count","integral",b"integral","maximum",b"maximum","minimum",b"minimum","sum",b"sum"]) -> None: ...

    METRIC_FIELD_NUMBER: builtins.int
    TIME_DELTA_FIELD_NUMBER: builtins.int
    VALUE_MIN_FIELD_NUMBER: builtins.int
    VALUE_MAX_FIELD_NUMBER: builtins.int
    VALUE_AVG_FIELD_NUMBER: builtins.int
    AGGREGATE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    metric: typing.Text
    @property
    def time_delta(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def value_min(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def value_max(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def value_avg(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def aggregate(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HistoryResponse.Aggregate]: ...
    @property
    def value(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    error: typing.Text
    def __init__(self,
        *,
        metric: typing.Text = ...,
        time_delta: typing.Optional[typing.Iterable[builtins.int]] = ...,
        value_min: typing.Optional[typing.Iterable[builtins.float]] = ...,
        value_max: typing.Optional[typing.Iterable[builtins.float]] = ...,
        value_avg: typing.Optional[typing.Iterable[builtins.float]] = ...,
        aggregate: typing.Optional[typing.Iterable[global___HistoryResponse.Aggregate]] = ...,
        value: typing.Optional[typing.Iterable[builtins.float]] = ...,
        error: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregate",b"aggregate","error",b"error","metric",b"metric","time_delta",b"time_delta","value",b"value","value_avg",b"value_avg","value_max",b"value_max","value_min",b"value_min"]) -> None: ...
global___HistoryResponse = HistoryResponse
