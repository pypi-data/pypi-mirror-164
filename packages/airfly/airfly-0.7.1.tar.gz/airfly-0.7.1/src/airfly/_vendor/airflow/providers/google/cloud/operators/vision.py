# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.models.baseoperator import BaseOperator


class CloudVisionAddProductToProductSetOperator(BaseOperator):
    product_set_id: "str"
    product_id: "str"
    location: "str"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionCreateProductOperator(BaseOperator):
    location: "str"
    product: "str"
    project_id: "typing.Union[str, NoneType]"
    product_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionCreateProductSetOperator(BaseOperator):
    product_set: "typing.Union[dict, google.cloud.vision_v1.types.ProductSet]"
    location: "str"
    project_id: "typing.Union[str, NoneType]"
    product_set_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionCreateReferenceImageOperator(BaseOperator):
    location: "str"
    reference_image: "typing.Union[typing.Dict, google.cloud.vision_v1.types.ReferenceImage]"
    product_id: "str"
    reference_image_id: "typing.Union[str, NoneType]"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionDeleteProductOperator(BaseOperator):
    location: "str"
    product_id: "str"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionDeleteProductSetOperator(BaseOperator):
    location: "str"
    product_set_id: "str"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionDetectImageLabelsOperator(BaseOperator):
    image: "typing.Union[typing.Dict, google.cloud.vision_v1.types.Image]"
    max_results: "typing.Union[int, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    additional_properties: "typing.Union[typing.Dict, NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionDetectImageSafeSearchOperator(BaseOperator):
    image: "typing.Union[typing.Dict, google.cloud.vision_v1.types.Image]"
    max_results: "typing.Union[int, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    additional_properties: "typing.Union[typing.Dict, NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionDetectTextOperator(BaseOperator):
    image: "typing.Union[typing.Dict, google.cloud.vision_v1.types.Image]"
    max_results: "typing.Union[int, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    language_hints: "typing.Union[str, typing.List[str], NoneType]"
    web_detection_params: "typing.Union[typing.Dict, NoneType]"
    additional_properties: "typing.Union[typing.Dict, NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionGetProductOperator(BaseOperator):
    location: "str"
    product_id: "str"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionGetProductSetOperator(BaseOperator):
    location: "str"
    product_set_id: "str"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionImageAnnotateOperator(BaseOperator):
    request: "typing.Union[typing.Dict, google.cloud.vision_v1.types.AnnotateImageRequest]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionRemoveProductFromProductSetOperator(BaseOperator):
    product_set_id: "str"
    product_id: "str"
    location: "str"
    project_id: "typing.Union[str, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionTextDetectOperator(BaseOperator):
    image: "typing.Union[typing.Dict, google.cloud.vision_v1.types.Image]"
    max_results: "typing.Union[int, NoneType]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    language_hints: "typing.Union[str, typing.List[str], NoneType]"
    web_detection_params: "typing.Union[typing.Dict, NoneType]"
    additional_properties: "typing.Union[typing.Dict, NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionUpdateProductOperator(BaseOperator):
    product: "typing.Union[typing.Dict, google.cloud.vision_v1.types.Product]"
    location: "typing.Union[str, NoneType]"
    product_id: "typing.Union[str, NoneType]"
    project_id: "typing.Union[str, NoneType]"
    update_mask: "typing.Union[typing.Dict, google.protobuf.field_mask_pb2.FieldMask]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class CloudVisionUpdateProductSetOperator(BaseOperator):
    product_set: "typing.Union[typing.Dict, google.cloud.vision_v1.types.ProductSet]"
    location: "typing.Union[str, NoneType]"
    product_set_id: "typing.Union[str, NoneType]"
    project_id: "typing.Union[str, NoneType]"
    update_mask: "typing.Union[typing.Dict, google.protobuf.field_mask_pb2.FieldMask]"
    retry: "typing.Union[google.api_core.retry.Retry, NoneType]"
    timeout: "typing.Union[float, NoneType]"
    metadata: "typing.Union[typing.Sequence[typing.Tuple[str, str]], NoneType]"
    gcp_conn_id: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"
