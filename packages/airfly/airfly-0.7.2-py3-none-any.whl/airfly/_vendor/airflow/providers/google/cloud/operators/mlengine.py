# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.models.baseoperator import BaseOperator


class MLEngineManageModelOperator(BaseOperator):
    model: "dict"
    operation: "str"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class MLEngineManageVersionOperator(BaseOperator):
    model_name: "str"
    version_name: "typing.Union[str, NoneType]"
    version: "typing.Union[dict, NoneType]"
    operation: "str"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class MLEngineStartBatchPredictionJobOperator(BaseOperator):
    job_id: "str"
    region: "str"
    data_format: "str"
    input_paths: "typing.List[str]"
    output_path: "str"
    model_name: "typing.Union[str, NoneType]"
    version_name: "typing.Union[str, NoneType]"
    uri: "typing.Union[str, NoneType]"
    max_worker_count: "typing.Union[int, NoneType]"
    runtime_version: "typing.Union[str, NoneType]"
    signature_name: "typing.Union[str, NoneType]"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    labels: "typing.Union[typing.Dict[str, str], NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class MLEngineStartTrainingJobOperator(BaseOperator):
    job_id: "str"
    region: "str"
    package_uris: "typing.List[str]"
    training_python_module: "str"
    training_args: "typing.List[str]"
    scale_tier: "typing.Union[str, NoneType]"
    master_type: "typing.Union[str, NoneType]"
    master_config: "typing.Union[typing.Dict, NoneType]"
    runtime_version: "typing.Union[str, NoneType]"
    python_version: "typing.Union[str, NoneType]"
    job_dir: "typing.Union[str, NoneType]"
    service_account: "typing.Union[str, NoneType]"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    mode: "str"
    labels: "typing.Union[typing.Dict[str, str], NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"
