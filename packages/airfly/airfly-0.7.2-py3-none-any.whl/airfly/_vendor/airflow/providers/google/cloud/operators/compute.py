# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.models.baseoperator import BaseOperator


class ComputeEngineBaseOperator(BaseOperator):
    zone: "str"
    resource_id: "str"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    api_version: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class ComputeEngineCopyInstanceTemplateOperator(ComputeEngineBaseOperator):
    resource_id: "str"
    body_patch: "dict"
    project_id: "typing.Union[str, NoneType]"
    request_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    api_version: "str"
    validate_body: "bool"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class ComputeEngineInstanceGroupUpdateManagerTemplateOperator(
    ComputeEngineBaseOperator
):
    resource_id: "str"
    zone: "str"
    source_template: "str"
    destination_template: "str"
    project_id: "typing.Union[str, NoneType]"
    update_policy: "typing.Union[typing.Dict[str, typing.Any], NoneType]"
    request_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    api_version: "_empty"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class ComputeEngineSetMachineTypeOperator(ComputeEngineBaseOperator):
    zone: "str"
    resource_id: "str"
    body: "dict"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    api_version: "str"
    validate_body: "bool"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class ComputeEngineStartInstanceOperator(ComputeEngineBaseOperator):
    zone: "str"
    resource_id: "str"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    api_version: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class ComputeEngineStopInstanceOperator(ComputeEngineBaseOperator):
    zone: "str"
    resource_id: "str"
    project_id: "typing.Union[str, NoneType]"
    gcp_conn_id: "str"
    api_version: "str"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"
