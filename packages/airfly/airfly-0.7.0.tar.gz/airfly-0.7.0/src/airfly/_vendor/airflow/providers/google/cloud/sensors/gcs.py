# Auto generated by 'inv collect-airflow'
from airfly._vendor.airflow.sensors.base import BaseSensorOperator


class GCSObjectExistenceSensor(BaseSensorOperator):
    bucket: "str"
    object: "str"
    google_cloud_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class GCSObjectsWithPrefixExistenceSensor(BaseSensorOperator):
    bucket: "str"
    prefix: "str"
    google_cloud_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class GCSObjectUpdateSensor(BaseSensorOperator):
    bucket: "str"
    object: "str"
    ts_func: "typing.Callable"
    google_cloud_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"


class GCSUploadSessionCompleteSensor(BaseSensorOperator):
    bucket: "str"
    prefix: "str"
    inactivity_period: "float"
    min_objects: "int"
    previous_objects: "typing.Union[typing.Set[str], NoneType]"
    allow_delete: "bool"
    google_cloud_conn_id: "str"
    delegate_to: "typing.Union[str, NoneType]"
    impersonation_chain: "typing.Union[str, typing.Sequence[str], NoneType]"
