Metadata-Version: 2.1
Name: sam
Version: 3.0.3
Summary: Time series anomaly detection and forecasting
Author-email: Royal HaskoningDHV <ruben.peters@rhdhv.com>
License: MIT
Project-URL: homepage, https://github.com/RoyalHaskoningDHV/sam
Project-URL: issues, https://github.com/RoyalHaskoningDHV/sam/issues
Project-URL: discussions, https://github.com/RoyalHaskoningDHV/sam/discussions
Project-URL: documentation, https://sam-rhdhv.readthedocs.io/en/latest/
Keywords: python,data-science,time-series,forecasting,anomaly-detection,asset-management
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas (~=1.3)
Requires-Dist: numpy (<1.22,>=1.18)
Requires-Dist: scikit-learn (>=1.1)
Provides-Extra: all
Requires-Dist: matplotlib ; extra == 'all'
Requires-Dist: cloudpickle ; extra == 'all'
Requires-Dist: nfft ; extra == 'all'
Requires-Dist: pymongo ; extra == 'all'
Requires-Dist: requests ; extra == 'all'
Requires-Dist: scipy ; extra == 'all'
Requires-Dist: seaborn ; extra == 'all'
Requires-Dist: tensorflow (<2.9,>=2.3.1) ; extra == 'all'
Requires-Dist: protobuf (<=3.20.1) ; extra == 'all'
Requires-Dist: eli5 ; extra == 'all'
Requires-Dist: Jinja2 (~=3.0.3) ; extra == 'all'
Requires-Dist: shap ; extra == 'all'
Requires-Dist: plotly ; extra == 'all'
Requires-Dist: statsmodels ; extra == 'all'
Provides-Extra: data-engineering
Requires-Dist: requests ; extra == 'data-engineering'
Requires-Dist: pymongo ; extra == 'data-engineering'
Provides-Extra: data-science
Requires-Dist: tensorflow (<2.9,>=2.3.1) ; extra == 'data-science'
Requires-Dist: cloudpickle ; extra == 'data-science'
Requires-Dist: nfft ; extra == 'data-science'
Requires-Dist: scipy ; extra == 'data-science'
Requires-Dist: shap ; extra == 'data-science'
Requires-Dist: eli5 ; extra == 'data-science'
Requires-Dist: Jinja2 (~=3.0.3) ; extra == 'data-science'
Requires-Dist: statsmodels ; extra == 'data-science'
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme ; extra == 'docs'
Requires-Dist: numpydoc ; extra == 'docs'
Requires-Dist: recommonmark ; extra == 'docs'
Requires-Dist: readthedocs-sphinx-search ; extra == 'docs'
Requires-Dist: sphinx-markdown-tables ; extra == 'docs'
Requires-Dist: toml ; extra == 'docs'
Requires-Dist: tensorflow (<2.9,>=2.3.1) ; extra == 'docs'
Provides-Extra: plotting
Requires-Dist: matplotlib ; extra == 'plotting'
Requires-Dist: plotly ; extra == 'plotting'
Requires-Dist: seaborn ; extra == 'plotting'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: pytest-mpl (<=0.15.0) ; extra == 'test'
Requires-Dist: fastparquet ; extra == 'test'

# SAM

SAM is a Python package for timeseries analysis, anomaly detection and forecasting.

Author: [Royal HaskoningDHV](https://global.royalhaskoningdhv.com/digital)

Email: [ruben.peters@rhdhv.com](mailto:ruben.peters@rhdhv.com)

## Getting started

The documentation is available [here.](https://sam-rhdhv.readthedocs.io/en/latest/).

The easiest way to install is package is using pip:
```
pip install sam
```

There are different optional dependencies for SAM, if you are unsure use `pip install 'sam[all]'` other options include `plotting` (just use the plotting functionality), `data_science` (all dependencies needed for a data scientist) and `data_engineering` (dependencies for data engineer).

Keep in mind that the sam package is updated frequently, and after a while, your local version may be out of date with the online documentation. To be sure, run the `pip install -U sam` command to install the latest version.

## Configuration

A configuration file can be created as `.config`. This configuration file only stores api credentials for now, but more options may be added in the future. The configuration file is parsed using the [Python3 configparser](https://docs.python.org/3/library/configparser.html), and an example configuration is shown below:

```
[regenradar]
user=regenradar.username
password=secret123

[openweathermap]
apikey=secret456
```

## Issue tracking and Feature Requests

Anyone can create feature requests or bug reports! You can browse and create new issues on GitHub: https://github.com/RoyalHaskoningDHV/sam/issues
