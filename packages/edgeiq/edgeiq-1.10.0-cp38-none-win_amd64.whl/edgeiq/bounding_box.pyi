from edgeiq.edge_tools import to_json_serializable as to_json_serializable

class BoundingBox:
    def __init__(self, start_x, start_y, end_x, end_y) -> None: ...
    def __eq__(self, other): ...
    def __mul__(self, other): ...
    def __rmul__(self, other): ...
    @property
    def start_x(self): ...
    @start_x.setter
    def start_x(self, val) -> None: ...
    @property
    def start_y(self): ...
    @start_y.setter
    def start_y(self, val) -> None: ...
    @property
    def end_x(self): ...
    @end_x.setter
    def end_x(self, val) -> None: ...
    @property
    def end_y(self): ...
    @end_y.setter
    def end_y(self, val) -> None: ...
    @property
    def width(self): ...
    @property
    def height(self): ...
    @property
    def area(self): ...
    @property
    def center(self): ...
    @center.setter
    def center(self, val) -> None: ...
    @property
    def opencv_bbox(self): ...
    def compute_distance(self, other_box): ...
    def get_intersection(self, other_box): ...
    def compute_overlap(self, other_box): ...

class BoundingBoxPrediction:
    def __init__(self, box, confidence) -> None: ...
    def __eq__(self, other): ...
    @property
    def box(self): ...
    @box.setter
    def box(self, box) -> None: ...
    @property
    def confidence(self): ...
    @confidence.setter
    def confidence(self, confidence) -> None: ...
