import{d as S,c as A,o as i,g as _,i as t,w as n,F as x,aK as C,aL as m,e as a,aM as w,aN as h,aO as B,aP as M,aa as v,al as O,aQ as $,aR as U,r,b as V,aS as E,aT as F,aU as L}from"./index.8031f405.js";const N={class:"settings-block"},R=S({__name:"SettingsCodeBlock",props:{engineSettings:null},setup(c){const e=c,s=A(()=>Object.entries(e.engineSettings));return(u,d)=>(i(),_("div",N,[t(a(w),{multiline:""},{default:n(()=>[(i(!0),_(x,null,C(a(s),(l,o)=>(i(),_("div",{key:o,class:"settings-block--code-line"},m(l[0])+": "+m(l[1]),1))),128))]),_:1})]))}});class j extends B(M){}const f=h(new j);const K=S({__name:"Settings",async setup(c){let e,s;const u=[{text:"Settings"}],d=([e,s]=v(()=>f.getSettings()),e=await e,s(),e),l=([e,s]=v(()=>f.getVersion()),e=await e,s(),e),o=O($());return U(()=>L(o.value)),(D,p)=>{const y=r("p-key-value"),g=r("p-label"),b=r("p-layout-default");return i(),V(b,{class:"settings"},{header:n(()=>[t(a(E),{crumbs:u},{actions:n(()=>[t(y,{label:"Version",value:a(l),alternate:""},null,8,["value"])]),_:1})]),default:n(()=>[t(g,{label:"Color Mode",class:"settings__color-mode"},{default:n(()=>[t(a(F),{selected:o.value,"onUpdate:selected":p[0]||(p[0]=k=>o.value=k)},null,8,["selected"])]),_:1}),t(g,{label:"Orion Settings"},{default:n(()=>[t(R,{class:"settings__code-block","engine-settings":a(d)},null,8,["engine-settings"])]),_:1})]),_:1})}}});export{K as default};
