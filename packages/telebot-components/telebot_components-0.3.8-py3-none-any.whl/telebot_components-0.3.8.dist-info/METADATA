Metadata-Version: 2.1
Name: telebot-components
Version: 0.3.8
Summary: Framework/toolkit for building Telegram bots with telebot and redis
Home-page: https://github.com/bots-against-war/telebot-components
License: GPLv3
Author: Igor Vaiman
Author-email: gosha.vaiman@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Dist: markdownify (>=0.11.2,<0.12.0)
Requires-Dist: py-trello (>=0.18.0,<0.19.0)
Requires-Dist: pytest-mock (>=3.7.0,<4.0.0)
Requires-Dist: redis (>=4.3.1,<5.0.0)
Requires-Dist: ruamel.yaml (>=0.17.21,<0.18.0)
Requires-Dist: telebot-against-war (>=0.4.13,<0.5.0)
Project-URL: Repository, https://github.com/bots-against-war/telebot-components
Description-Content-Type: text/markdown

# telebot-components

Framework / toolkit for building bots with [telebot](https://github.com/bots-against-war/telebot).

<!-- ## Development -->


## Development

Install with Poetry (requires 1.2.x and higher with plugin support):

```bash
poetry install
```

### Testing

```bash
pytest tests -vv
```

By default all tests are run with in-memory Redis emulation. But if you have Redis installed you can run them
locally on real Redis by specifying something like

```bash
export REDIS_URL="redis://localhost:1234"
```

Tests must be able to find an empty Redis DB to use; they also clean up after themselves.

