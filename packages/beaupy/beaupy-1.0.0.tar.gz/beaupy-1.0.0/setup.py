# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['beaupy']

package_data = \
{'': ['*']}

install_requires = \
['readchar>=3.1.0,<4.0.0', 'rich>=12.5.1,<13.0.0']

setup_kwargs = {
    'name': 'beaupy',
    'version': '1.0.0',
    'description': 'A library of elements for interactive TUIs in Python',
    'long_description': '![beaupy](https://user-images.githubusercontent.com/47027005/185082011-cb588f57-d38f-42d8-8312-3981ae1bc479.png)\n\n\n> A Python library of interactive CLI elements you have been looking for\n\n---\n\n[![Tests](https://github.com/petereon/beaupy/actions/workflows/python-test.yml/badge.svg)](https://github.com/petereon/beaupy/actions/workflows/python-test.yml)\n[![Lint](https://github.com/petereon/beaupy/actions/workflows/python-lint.yml/badge.svg)](https://github.com/petereon/beaupy/actions/workflows/python-lint.yml)\n[![Lines of Code](https://sonarcloud.io/api/project_badges/measure?project=petereon_beaupy&metric=ncloc)](https://sonarcloud.io/summary/new_code?id=petereon_beaupy)\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=petereon_beaupy&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=petereon_beaupy)\n[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=petereon_beaupy&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=petereon_beaupy)\n\n## Acknowledgment\nBeauPy stands on the shoulders of giants. It is based on another library with which it shares some of the source code, [`cutie`](https://github.com/kamik423/cutie), developed by [Kamik423](https://github.com/Kamik423). It has begun as a fork but has since diverged into it\'s own thing and as such, detached from the original repository.\n\n# Overview\n\n**BeauPy** implements a number of common interactive elements:\n\n| Function                                                                                                  | Functionality                                                                              |\n|:----------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------|\n| [`select`](https://github.com/petereon/beaupy/blob/master/APIDOC.md#beaupy.select)                        | Prompt to pick a choice from a list                                                        |\n| [`select_multiple`](https://github.com/petereon/beaupy/blob/master/APIDOC.md#beaupy.select_multiple)      | Prompt to select one or multiple choices from a list                                       |\n| [`confirm`](https://github.com/petereon/beaupy/blob/master/APIDOC.md#beaupy.confirm)                      | Prompt with a question and yes/no options                                                  |\n| [`prompt`](https://github.com/petereon/beaupy/blob/master/APIDOC.md#beaupy.prompt)                        | Prompt that takes free input with optional validation, type conversion and input hiding |\n\n## Usage\n\n![example](https://raw.githubusercontent.com/petereon/beaupy/master/example.gif)\n\nTUI elements shown in the above gif are the result of the follwing code:\n\n```python\nimport beaupy\n\n\ndef main():\n    """Main."""\n    if beaupy.confirm("Are you brave enough to continue?"):\n        names = [\n            "Arthur, King of the Britons",\n            "Sir Lancelot the Brave",\n            "Sir Robin the Not-Quite-So-Brave-as-Sir-Lancelot",\n            "Sir Bedevere the Wise",\n            "Sir Galahad the Pure",\n        ]\n\n        name = names[beaupy.select(names, cursor_index=3)]\n        print(f"Welcome, {name}")\n        # Get an integer greater or equal to 0\n        age = beaupy.prompt("What is your age?", target_type=int, validator=lambda val: val > 0)\n        nemeses_options = [\n            "The French",\n            "The Police",\n            "The Knights Who Say Ni",\n            "Women",\n            "The Black Knight",\n            "The Bridge Keeper",\n            "The Rabbit of Caerbannog",\n        ]\n        print("Choose your nemeses")\n        # Choose multiple options from a list\n        nemeses_indices = beaupy.select_multiple(nemeses_options)\n        nemeses = [\n            nemesis\n            for nemesis_index, nemesis in enumerate(nemeses_options)\n            if nemesis_index in nemeses_indices\n        ]\n        # Get input without showing it being typed\n        quest = beaupy.prompt("What is your quest?", secure=True)\n        print(f"{name}\'s quest (who is {age}) is {quest}.")\n        if nemeses:\n            if len(nemeses) == 1:\n                print(f"His nemesis is {nemeses[0]}.")\n            else:\n                print(f\'His nemeses are {" and ".join(nemeses)}.\')\n        else:\n            print("He has no nemesis.")\n\n```\n\n## Installation\n\nFrom PyPI:\n\n```sh\npip install beaupy\n```\n\nFrom source:\n\n```sh\ngit clone https://github.com/petereon/beaupy.git\npoetry build\npip install ./dist/beaupy-{{some-version}}-py3-none-any.whl\n```\n\n## Documentation\n\n**BeauPy** is a library of interactive TUI elements for CLI applications.\n\n**BeauPy** is\n\n- [rich](https://rich.readthedocs.io/en/stable/) friendly\n- stylable\n- opinionated\n- configurable\n\nFor styling you can leverage [numerous styling options](https://rich.readthedocs.io/en/stable/style.html) provided by rich, for example:\n\n\n\n```python\nres_index = select(options = ["red", "on", "white"], \n                   cursor = "x ", \n                   cursor_style= "red on white")\n```\nto use a red `x` character on a white background, or\n\n```python\nres_indices = select_multiple(options = ["ok", "ko"], \n                              tick_character = "k", \n                              tick_style="#af00ff)\n```\nto use a purple `k` as in a tick in checked option\n\nYou can also use whatever as a cursor:\n```python\nres_index = select(options = ["here", "comes", "the", "sun"], \n                   cursor = "ðŸŒž ")\n```\nto use a sun emoji, or\n```python\nres_index = select(options = ["hardcore", "unicode"], \n                   cursor = "â‡‰ ")\n```\nto use `â‡‰`.\n\nYou don\'t even have to use one character, this also works perfectly fine:\n```python\nres_index = select(options = ["this", "other thing"], \n                   cursor = "selected ")\n```\n\nAs you can see, world is your oyster. \n\nTo see more exciting stuff in less exciting format, please refer to [`APIDOC.md`](https://github.com/petereon/beaupy/blob/master/APIDOC.md)\n\n## Roadmap\n\nThis repository has a [associated GitHub project](https://github.com/users/petereon/projects/3/views/1) where work that is currently done can be seen\n\n## Contributing\n\nIf you want to contribute, please feel free to suggest features or implement them yourself.\n\nAlso **please report any issues and bugs you might find!**\n\n### Development\n\nTo start development you can clone the repository:\n\n```sh\ngit clone https://github.com/petereon/beaupy.git\n```\n\nChange the directory to the project directory:\n\n```sh\ncd ./beaupy/\n```\n\nThis project uses [`poetry`](https://python-poetry.org/) as a dependency manager. You can install the dependencies using:\n\n```sh\npoetry install\n```\n\nFor testing, this project relies on [`ward`](https://github.com/darrenburns/ward). It is included as a development dependency, so\nafter installing the dependencies you can simply execute the following:\n\n```sh\npoetry run poe test\n```\n\nAfter you have made your changes, create a pull request towards a master branch of this repository\n\nLooking forward to your pull requests!\n\n## License\n\nThe project is licensed under the [MIT License](LICENSE).\n',
    'author': 'Peter Vyboch',
    'author_email': 'pvyboch1@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/petereon/beaupy',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.7.8,<4.0.0',
}


setup(**setup_kwargs)
