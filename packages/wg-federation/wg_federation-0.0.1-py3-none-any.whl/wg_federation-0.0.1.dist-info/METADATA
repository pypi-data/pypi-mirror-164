Metadata-Version: 2.1
Name: wg-federation
Version: 0.0.1
Summary: A client/server tool to securely auto-registers peers to a wireguard VPN
Author-email: Anuvu DevOps Team <MTL.DevOps.Team@globaleagle.com>
Maintainer-email: Anuvu DevOps Team <MTL.DevOps.Team@globaleagle.com>
Project-URL: source, https://bitbucket.org/GEE_Media/python-wg-federation
Project-URL: container, https://bitbucket.org/GEE_Media/container-wg-federation
Keywords: wireguard,vpn,federation,radius
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: System Administrators
Classifier: Topic :: System :: Networking
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: NOTICE
Provides-Extra: build
Requires-Dist: setuptools ; extra == 'build'
Requires-Dist: build ; extra == 'build'
Requires-Dist: wheel ; extra == 'build'
Requires-Dist: twine ; extra == 'build'
Provides-Extra: dev
Requires-Dist: pytest (>=7) ; extra == 'dev'
Requires-Dist: pytest-pep8 ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytest-spec ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'

# wg-federation

A Wireguard federation server and client.

## Development

### Install, Develop & Run Package Locally

`virtualenv` must be installed on your system.

```bash
# Setup
python -m venv venv
source ./venv/bin/activate
pip install -e ".[dev]"
pip install -e ".[build]" # optional: if you want to build locally
wg-federation # To run wg-federation

# Deactivate
deactivate
```

### Run Unit Tests

```bash
pytest -v --spec
pytest -v --cov # To see coverage
```

### Deploy Manually

#### Build
```bash
python -m build
```
#### Publish to Test PyPI
_Use `__token__` as a username to publish using a token_
```bash
twine upload --repository testpypi dist/*
```

#### Publish in Production (PyPI)
_Use `__token__` as a username to publish using a token_
```bash
twine upload dist/*
```


