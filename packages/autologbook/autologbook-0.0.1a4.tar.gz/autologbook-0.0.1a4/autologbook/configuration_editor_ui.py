# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\configuration_editor.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_configurationDialog(object):
    def setupUi(self, configurationDialog):
        configurationDialog.setObjectName("configurationDialog")
        configurationDialog.resize(494, 584)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(configurationDialog)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.elog_group_box = QtWidgets.QGroupBox(configurationDialog)
        self.elog_group_box.setObjectName("elog_group_box")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.elog_group_box)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.elog_user_label = QtWidgets.QLabel(self.elog_group_box)
        self.elog_user_label.setObjectName("elog_user_label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.elog_user_label)
        self.elog_user_field = QtWidgets.QLineEdit(self.elog_group_box)
        self.elog_user_field.setObjectName("elog_user_field")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.elog_user_field)
        self.label = QtWidgets.QLabel(self.elog_group_box)
        self.label.setObjectName("label")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label)
        self.elog_password_field = QtWidgets.QLineEdit(self.elog_group_box)
        self.elog_password_field.setEchoMode(QtWidgets.QLineEdit.Password)
        self.elog_password_field.setObjectName("elog_password_field")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.elog_password_field)
        self.elog_hostname_label = QtWidgets.QLabel(self.elog_group_box)
        self.elog_hostname_label.setObjectName("elog_hostname_label")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.elog_hostname_label)
        self.elog_hostname_field = QtWidgets.QLineEdit(self.elog_group_box)
        self.elog_hostname_field.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.elog_hostname_field.setObjectName("elog_hostname_field")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.elog_hostname_field)
        self.elog_port_label = QtWidgets.QLabel(self.elog_group_box)
        self.elog_port_label.setObjectName("elog_port_label")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.elog_port_label)
        self.elog_port_field = QtWidgets.QSpinBox(self.elog_group_box)
        self.elog_port_field.setMaximum(100000)
        self.elog_port_field.setProperty("value", 8080)
        self.elog_port_field.setObjectName("elog_port_field")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.elog_port_field)
        self.verticalLayout_9.addLayout(self.formLayout)
        self.horizontalLayout_5.addWidget(self.elog_group_box)
        self.image_server_group_box = QtWidgets.QGroupBox(configurationDialog)
        self.image_server_group_box.setObjectName("image_server_group_box")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.image_server_group_box)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.base_path_label = QtWidgets.QLabel(self.image_server_group_box)
        self.base_path_label.setObjectName("base_path_label")
        self.gridLayout_2.addWidget(self.base_path_label, 0, 0, 1, 1)
        self.base_path_field = QtWidgets.QLineEdit(self.image_server_group_box)
        self.base_path_field.setObjectName("base_path_field")
        self.gridLayout_2.addWidget(self.base_path_field, 0, 1, 1, 2)
        self.search_basepath_button = QtWidgets.QToolButton(self.image_server_group_box)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/resources/icons8-opened-folder-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search_basepath_button.setIcon(icon)
        self.search_basepath_button.setObjectName("search_basepath_button")
        self.gridLayout_2.addWidget(self.search_basepath_button, 0, 3, 1, 1)
        self.server_root_label = QtWidgets.QLabel(self.image_server_group_box)
        self.server_root_label.setObjectName("server_root_label")
        self.gridLayout_2.addWidget(self.server_root_label, 1, 0, 1, 1)
        self.server_root_field = QtWidgets.QLineEdit(self.image_server_group_box)
        self.server_root_field.setObjectName("server_root_field")
        self.gridLayout_2.addWidget(self.server_root_field, 1, 1, 1, 2)
        self.img_thumb_size_label = QtWidgets.QLabel(self.image_server_group_box)
        self.img_thumb_size_label.setObjectName("img_thumb_size_label")
        self.gridLayout_2.addWidget(self.img_thumb_size_label, 2, 0, 1, 2)
        self.img_thumb_size_spinbox = QtWidgets.QSpinBox(self.image_server_group_box)
        self.img_thumb_size_spinbox.setSuffix("")
        self.img_thumb_size_spinbox.setMaximum(1024)
        self.img_thumb_size_spinbox.setProperty("value", 400)
        self.img_thumb_size_spinbox.setObjectName("img_thumb_size_spinbox")
        self.gridLayout_2.addWidget(self.img_thumb_size_spinbox, 2, 2, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout_2)
        self.horizontalLayout_5.addWidget(self.image_server_group_box)
        self.verticalLayout_7.addLayout(self.horizontalLayout_5)
        self.watchdog_group_box = QtWidgets.QGroupBox(configurationDialog)
        self.watchdog_group_box.setObjectName("watchdog_group_box")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.watchdog_group_box)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.autologbook_watchdog_group_box = QtWidgets.QGroupBox(self.watchdog_group_box)
        self.autologbook_watchdog_group_box.setObjectName("autologbook_watchdog_group_box")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.autologbook_watchdog_group_box)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.autologbook_max_attempts_label = QtWidgets.QLabel(self.autologbook_watchdog_group_box)
        self.autologbook_max_attempts_label.setObjectName("autologbook_max_attempts_label")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.autologbook_max_attempts_label)
        self.autologbook_max_attempts_spinbox = QtWidgets.QSpinBox(self.autologbook_watchdog_group_box)
        self.autologbook_max_attempts_spinbox.setMinimum(1)
        self.autologbook_max_attempts_spinbox.setObjectName("autologbook_max_attempts_spinbox")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.autologbook_max_attempts_spinbox)
        self.autologbook_wait_min_label = QtWidgets.QLabel(self.autologbook_watchdog_group_box)
        self.autologbook_wait_min_label.setObjectName("autologbook_wait_min_label")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.autologbook_wait_min_label)
        self.autologbook_wait_min_spinbox = QtWidgets.QDoubleSpinBox(self.autologbook_watchdog_group_box)
        self.autologbook_wait_min_spinbox.setDecimals(1)
        self.autologbook_wait_min_spinbox.setProperty("value", 1.0)
        self.autologbook_wait_min_spinbox.setObjectName("autologbook_wait_min_spinbox")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.autologbook_wait_min_spinbox)
        self.autologbook_wait_max_label = QtWidgets.QLabel(self.autologbook_watchdog_group_box)
        self.autologbook_wait_max_label.setObjectName("autologbook_wait_max_label")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.autologbook_wait_max_label)
        self.autologbook_wait_max_spinbox = QtWidgets.QDoubleSpinBox(self.autologbook_watchdog_group_box)
        self.autologbook_wait_max_spinbox.setDecimals(1)
        self.autologbook_wait_max_spinbox.setProperty("value", 5.0)
        self.autologbook_wait_max_spinbox.setObjectName("autologbook_wait_max_spinbox")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.autologbook_wait_max_spinbox)
        self.autologbook_wait_increment_label = QtWidgets.QLabel(self.autologbook_watchdog_group_box)
        self.autologbook_wait_increment_label.setObjectName("autologbook_wait_increment_label")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.autologbook_wait_increment_label)
        self.autologbook_wait_increment_spinbox = QtWidgets.QDoubleSpinBox(self.autologbook_watchdog_group_box)
        self.autologbook_wait_increment_spinbox.setDecimals(1)
        self.autologbook_wait_increment_spinbox.setProperty("value", 1.0)
        self.autologbook_wait_increment_spinbox.setObjectName("autologbook_wait_increment_spinbox")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.autologbook_wait_increment_spinbox)
        self.autologbook_min_delay_label = QtWidgets.QLabel(self.autologbook_watchdog_group_box)
        self.autologbook_min_delay_label.setObjectName("autologbook_min_delay_label")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.autologbook_min_delay_label)
        self.autologbook_min_delay_spinbox = QtWidgets.QDoubleSpinBox(self.autologbook_watchdog_group_box)
        self.autologbook_min_delay_spinbox.setDecimals(1)
        self.autologbook_min_delay_spinbox.setProperty("value", 45.0)
        self.autologbook_min_delay_spinbox.setObjectName("autologbook_min_delay_spinbox")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.autologbook_min_delay_spinbox)
        self.verticalLayout_2.addLayout(self.formLayout_2)
        self.horizontalLayout_2.addWidget(self.autologbook_watchdog_group_box)
        self.mirroring_group_box = QtWidgets.QGroupBox(self.watchdog_group_box)
        self.mirroring_group_box.setObjectName("mirroring_group_box")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.mirroring_group_box)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.mirroring_engine_label = QtWidgets.QLabel(self.mirroring_group_box)
        self.mirroring_engine_label.setObjectName("mirroring_engine_label")
        self.horizontalLayout.addWidget(self.mirroring_engine_label)
        self.engine_combobox = QtWidgets.QComboBox(self.mirroring_group_box)
        self.engine_combobox.setObjectName("engine_combobox")
        self.engine_combobox.addItem("")
        self.engine_combobox.addItem("")
        self.horizontalLayout.addWidget(self.engine_combobox)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        self.mirroring_max_attempts_label = QtWidgets.QLabel(self.mirroring_group_box)
        self.mirroring_max_attempts_label.setObjectName("mirroring_max_attempts_label")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.mirroring_max_attempts_label)
        self.mirroring_max_attempts_spinbox = QtWidgets.QSpinBox(self.mirroring_group_box)
        self.mirroring_max_attempts_spinbox.setMinimum(1)
        self.mirroring_max_attempts_spinbox.setObjectName("mirroring_max_attempts_spinbox")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.mirroring_max_attempts_spinbox)
        self.mirroring_wait_label = QtWidgets.QLabel(self.mirroring_group_box)
        self.mirroring_wait_label.setObjectName("mirroring_wait_label")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.mirroring_wait_label)
        self.mirroring_wait_spinbox = QtWidgets.QDoubleSpinBox(self.mirroring_group_box)
        self.mirroring_wait_spinbox.setDecimals(1)
        self.mirroring_wait_spinbox.setProperty("value", 0.5)
        self.mirroring_wait_spinbox.setObjectName("mirroring_wait_spinbox")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.mirroring_wait_spinbox)
        self.verticalLayout_3.addLayout(self.formLayout_3)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        self.horizontalLayout_2.addWidget(self.mirroring_group_box)
        self.verticalLayout_6.addLayout(self.horizontalLayout_2)
        self.verticalLayout_7.addWidget(self.watchdog_group_box)
        self.external_tools_group_box = QtWidgets.QGroupBox(configurationDialog)
        self.external_tools_group_box.setObjectName("external_tools_group_box")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.external_tools_group_box)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.text_editor_label = QtWidgets.QLabel(self.external_tools_group_box)
        self.text_editor_label.setObjectName("text_editor_label")
        self.gridLayout.addWidget(self.text_editor_label, 0, 0, 1, 1)
        self.notepad_field = QtWidgets.QLineEdit(self.external_tools_group_box)
        self.notepad_field.setObjectName("notepad_field")
        self.gridLayout.addWidget(self.notepad_field, 0, 1, 1, 1)
        self.notepad_search_button = QtWidgets.QToolButton(self.external_tools_group_box)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/resources/icons8-opened-folder-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.notepad_search_button.setIcon(icon1)
        self.notepad_search_button.setObjectName("notepad_search_button")
        self.gridLayout.addWidget(self.notepad_search_button, 0, 2, 1, 1)
        self.robocopy_label = QtWidgets.QLabel(self.external_tools_group_box)
        self.robocopy_label.setObjectName("robocopy_label")
        self.gridLayout.addWidget(self.robocopy_label, 1, 0, 1, 1)
        self.robocopy_field = QtWidgets.QLineEdit(self.external_tools_group_box)
        self.robocopy_field.setObjectName("robocopy_field")
        self.gridLayout.addWidget(self.robocopy_field, 1, 1, 1, 1)
        self.robocopy_search_button = QtWidgets.QToolButton(self.external_tools_group_box)
        self.robocopy_search_button.setIcon(icon1)
        self.robocopy_search_button.setObjectName("robocopy_search_button")
        self.gridLayout.addWidget(self.robocopy_search_button, 1, 2, 1, 1)
        self.horizontalLayout_8.addLayout(self.gridLayout)
        self.verticalLayout_7.addWidget(self.external_tools_group_box)
        self.microscope_group_box = QtWidgets.QGroupBox(configurationDialog)
        self.microscope_group_box.setObjectName("microscope_group_box")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.microscope_group_box)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.microscope_tabs = QtWidgets.QTabWidget(self.microscope_group_box)
        self.microscope_tabs.setObjectName("microscope_tabs")
        self.quattro_tab = QtWidgets.QWidget()
        self.quattro_tab.setObjectName("quattro_tab")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.quattro_tab)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.quattro_elog_logbook_label = QtWidgets.QLabel(self.quattro_tab)
        self.quattro_elog_logbook_label.setObjectName("quattro_elog_logbook_label")
        self.horizontalLayout_3.addWidget(self.quattro_elog_logbook_label)
        self.quattro_elog_logbook_field = QtWidgets.QLineEdit(self.quattro_tab)
        self.quattro_elog_logbook_field.setObjectName("quattro_elog_logbook_field")
        self.horizontalLayout_3.addWidget(self.quattro_elog_logbook_field)
        self.img_navacam_size_label = QtWidgets.QLabel(self.quattro_tab)
        self.img_navacam_size_label.setObjectName("img_navacam_size_label")
        self.horizontalLayout_3.addWidget(self.img_navacam_size_label)
        self.quattro_navcam_size_spinbox = QtWidgets.QSpinBox(self.quattro_tab)
        self.quattro_navcam_size_spinbox.setSuffix("")
        self.quattro_navcam_size_spinbox.setMaximum(1024)
        self.quattro_navcam_size_spinbox.setProperty("value", 500)
        self.quattro_navcam_size_spinbox.setObjectName("quattro_navcam_size_spinbox")
        self.horizontalLayout_3.addWidget(self.quattro_navcam_size_spinbox)
        self.horizontalLayout_10.addLayout(self.horizontalLayout_3)
        self.microscope_tabs.addTab(self.quattro_tab, "")
        self.versa_tab = QtWidgets.QWidget()
        self.versa_tab.setObjectName("versa_tab")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.versa_tab)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.versa_elog_logbook_label = QtWidgets.QLabel(self.versa_tab)
        self.versa_elog_logbook_label.setObjectName("versa_elog_logbook_label")
        self.horizontalLayout_4.addWidget(self.versa_elog_logbook_label)
        self.versa_elog_logbook_field = QtWidgets.QLineEdit(self.versa_tab)
        self.versa_elog_logbook_field.setObjectName("versa_elog_logbook_field")
        self.horizontalLayout_4.addWidget(self.versa_elog_logbook_field)
        self.horizontalLayout_7.addLayout(self.horizontalLayout_4)
        self.microscope_tabs.addTab(self.versa_tab, "")
        self.horizontalLayout_9.addWidget(self.microscope_tabs)
        self.verticalLayout_7.addWidget(self.microscope_group_box)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.load_conf_button = QtWidgets.QPushButton(configurationDialog)
        self.load_conf_button.setIcon(icon)
        self.load_conf_button.setObjectName("load_conf_button")
        self.horizontalLayout_6.addWidget(self.load_conf_button)
        self.save_conf_button = QtWidgets.QPushButton(configurationDialog)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/resources/icons8-save-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.save_conf_button.setIcon(icon2)
        self.save_conf_button.setObjectName("save_conf_button")
        self.horizontalLayout_6.addWidget(self.save_conf_button)
        self.reset_conf_button = QtWidgets.QPushButton(configurationDialog)
        self.reset_conf_button.setObjectName("reset_conf_button")
        self.horizontalLayout_6.addWidget(self.reset_conf_button)
        spacerItem = QtWidgets.QSpacerItem(88, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.buttonBox = QtWidgets.QDialogButtonBox(configurationDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.horizontalLayout_6.addWidget(self.buttonBox)
        self.verticalLayout_7.addLayout(self.horizontalLayout_6)
        self.verticalLayout_8.addLayout(self.verticalLayout_7)
        self.elog_user_label.setBuddy(self.elog_user_field)
        self.label.setBuddy(self.elog_password_field)
        self.elog_hostname_label.setBuddy(self.elog_hostname_field)
        self.elog_port_label.setBuddy(self.elog_port_field)
        self.base_path_label.setBuddy(self.base_path_field)
        self.server_root_label.setBuddy(self.server_root_field)
        self.img_thumb_size_label.setBuddy(self.img_thumb_size_spinbox)
        self.autologbook_max_attempts_label.setBuddy(self.autologbook_max_attempts_spinbox)
        self.autologbook_wait_min_label.setBuddy(self.autologbook_wait_min_spinbox)
        self.autologbook_wait_max_label.setBuddy(self.autologbook_wait_max_spinbox)
        self.autologbook_wait_increment_label.setBuddy(self.autologbook_wait_increment_spinbox)
        self.autologbook_min_delay_label.setBuddy(self.autologbook_min_delay_spinbox)
        self.mirroring_engine_label.setBuddy(self.engine_combobox)
        self.mirroring_max_attempts_label.setBuddy(self.mirroring_max_attempts_spinbox)
        self.mirroring_wait_label.setBuddy(self.mirroring_wait_spinbox)
        self.text_editor_label.setBuddy(self.notepad_field)
        self.robocopy_label.setBuddy(self.robocopy_field)
        self.quattro_elog_logbook_label.setBuddy(self.quattro_elog_logbook_field)
        self.img_navacam_size_label.setBuddy(self.quattro_navcam_size_spinbox)
        self.versa_elog_logbook_label.setBuddy(self.versa_elog_logbook_field)

        self.retranslateUi(configurationDialog)
        self.microscope_tabs.setCurrentIndex(0)
        self.buttonBox.accepted.connect(configurationDialog.accept)
        self.buttonBox.rejected.connect(configurationDialog.reject)
        self.notepad_search_button.clicked.connect(configurationDialog.search_text_editor)
        self.robocopy_search_button.clicked.connect(configurationDialog.search_robocopy)
        self.load_conf_button.clicked.connect(configurationDialog.load_conf_file)
        self.save_conf_button.clicked.connect(configurationDialog.save_conf_file)
        self.reset_conf_button.clicked.connect(configurationDialog.reset_conf)
        self.search_basepath_button.clicked.connect(configurationDialog.search_basepath)
        QtCore.QMetaObject.connectSlotsByName(configurationDialog)

    def retranslateUi(self, configurationDialog):
        _translate = QtCore.QCoreApplication.translate
        configurationDialog.setWindowTitle(_translate("configurationDialog", "Configuration editor"))
        self.elog_group_box.setTitle(_translate("configurationDialog", "General ELOG parameters"))
        self.elog_user_label.setText(_translate("configurationDialog", "ELOG User name"))
        self.elog_user_field.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">ELOG User Name</span></p><p>In order to be able to post on the ELOG, this automatic tool needs to use access credentials. Put here the user name you want to use</p></body></html>"))
        self.label.setText(_translate("configurationDialog", "ELOG User password"))
        self.elog_password_field.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">ELOG Password</span></p><p><span style=\" font-size:14pt; font-weight:600;\"/></p><p>In order to be able to post on the ELOG, this automatic tool needs to use access credentials. Put here the password you want to use.</p><p><br/></p><p><span style=\" font-weight:600;\">WARNING:</span></p><p><span style=\" font-weight:600;\">Even if hidded on this window, your password will be written in plain text in the configuration file.</span></p></body></html>"))
        self.elog_hostname_label.setText(_translate("configurationDialog", "ELOG hostname"))
        self.elog_hostname_field.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">ELOG Hostname</span></p><p>This is the URL where the ELOG is responding. If you have no idea, ask your system administrator.</p></body></html>"))
        self.elog_port_label.setText(_translate("configurationDialog", "ELOG port"))
        self.elog_port_field.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">ELOG Port</span></p><p>This is the TCP/IP port where the ELOG is listening. If you have no idea, ask your system administrator.</p></body></html>"))
        self.image_server_group_box.setTitle(_translate("configurationDialog", "Image server"))
        self.base_path_label.setText(_translate("configurationDialog", "Base path"))
        self.base_path_field.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">Image server base path</span></p><p>Images are not uploaded to the ELOG because they are generally too many for a single post. All images (TIF, PNG and Thumbnail) are served by another webserver. </p><p>This base path is the location where all images are saved. </p><p>For example. Assume that:</p><p>- base path is <span style=\" font-weight:600;\">c:\\Pictures\\Microscopy</span></p><p>- server roor is <span style=\" font-weight:600;\">https://my-image-server/pics</span></p><p>So a picture saved in c:\\Pictures\\Microscopy\\MyExperiment\\Sample\\image1.tif will be made available as https://my-image-server/pics/MyExperiment/Sample/image1.tif</p></body></html>"))
        self.search_basepath_button.setText(_translate("configurationDialog", "..."))
        self.server_root_label.setText(_translate("configurationDialog", "Server root"))
        self.server_root_field.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">Image server root</span></p><p>Images are not uploaded to the ELOG because they are generally too many for a single post. All images (TIF, PNG and Thumbnail) are served by another webserver. </p><p>This server root is a URL pointing to the base of the image server.</p><p>For example. Assume that:</p><p>- base path is <span style=\" font-weight:600;\">c:\\Pictures\\Microscopy</span></p><p>- server roor is <span style=\" font-weight:600;\">https://my-image-server/pics</span></p><p>So a picture saved in c:\\Pictures\\Microscopy\\MyExperiment\\Sample\\image1.tif will be made available as https://my-image-server/pics/MyExperiment/Sample/image1.tif</p></body></html>"))
        self.img_thumb_size_label.setText(_translate("configurationDialog", "Thumbnail size (px)"))
        self.img_thumb_size_spinbox.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">Thumbnail size</span></p><p>Select the width in pixel of the png thumbnail pictures.</p></body></html>"))
        self.watchdog_group_box.setTitle(_translate("configurationDialog", "Watchdog parameters"))
        self.autologbook_watchdog_group_box.setTitle(_translate("configurationDialog", "Autologbook"))
        self.autologbook_max_attempts_label.setText(_translate("configurationDialog", "Maximum number of attempts"))
        self.autologbook_max_attempts_spinbox.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt;\">Autologobook watchdog maximum number of attempts</span></p><p>While the autologbook watchdog is monitoring the protocol folder and try to operate on a file, it could be that for several reasons the process is failing.</p><p>In this case the same process will be attempted up to a maximum number of trials (this parameter) with an increasing waiting time in between from minimum waiting time to maximum waititng time with a waiting time increment.  </p></body></html>"))
        self.autologbook_wait_min_label.setText(_translate("configurationDialog", "Minimum waiting time "))
        self.autologbook_wait_min_spinbox.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt;\">Autologobook watchdog minimum waiting time</span></p><p>While the autologbook watchdog is monitoring the protocol folder and try to operate on a file, it could be that for several reasons the process is failing.</p><p>In this case the same process will be attempted up to a maximum number of trials with an increasing waiting time in between from minimum waiting time (this parameter) to maximum waititng time with a waiting time increment.</p></body></html>"))
        self.autologbook_wait_max_label.setText(_translate("configurationDialog", "Maximum waiting time "))
        self.autologbook_wait_max_spinbox.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt;\">Autologobook watchdog maximum waiting time</span></p><p>While the autologbook watchdog is monitoring the protocol folder and try to operate on a file, it could be that for several reasons the process is failing.</p><p>In this case the same process will be attempted up to a maximum number of trials with an increasing waiting time in between from minimum waiting time to maximum waititng time (this parameter) with a waiting time increment.</p></body></html>"))
        self.autologbook_wait_increment_label.setText(_translate("configurationDialog", "Waiting time increment"))
        self.autologbook_wait_increment_spinbox.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt;\">Autologobook watchdog waiting time increment</span></p><p>While the autologbook watchdog is monitoring the protocol folder and try to operate on a file, it could be that for several reasons the process is failing.</p><p>In this case the same process will be attempted up to a maximum number of trials with an increasing waiting time in between from minimum waiting time to maximum waititng time with a waiting time increment (this parameter).</p></body></html>"))
        self.autologbook_min_delay_label.setText(_translate("configurationDialog", "Min delay between ELOG posts"))
        self.autologbook_min_delay_spinbox.setWhatsThis(_translate("configurationDialog", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">Delay between ELOG posts</span></p><p><br/></p><p>If many filesystem events are detected by the autologbook watchdog, there could be a high number of almost identical ELOG message posted in a short period of time. All these posts are not only saturating the band and riskying to kill the ELOG server, but they are also useless. </p><p><br/></p><p>For this reason, two ELOG posts must be separated at least by the number of seconds specified by this parameter.</p></body></html>"))
        self.mirroring_group_box.setTitle(_translate("configurationDialog", "Mirroring"))
        self.mirroring_engine_label.setText(_translate("configurationDialog", "Engine"))
        self.engine_combobox.setItemText(0, _translate("configurationDialog", "watchdog"))
        self.engine_combobox.setItemText(1, _translate("configurationDialog", "robocopy"))
        self.mirroring_max_attempts_label.setText(_translate("configurationDialog", "Maximum number of attempts"))
        self.mirroring_wait_label.setText(_translate("configurationDialog", "Waiting time"))
        self.external_tools_group_box.setTitle(_translate("configurationDialog", "External tools"))
        self.text_editor_label.setText(_translate("configurationDialog", "Text editor"))
        self.notepad_search_button.setText(_translate("configurationDialog", "..."))
        self.robocopy_label.setText(_translate("configurationDialog", "Robocopy"))
        self.robocopy_search_button.setText(_translate("configurationDialog", "..."))
        self.microscope_group_box.setTitle(_translate("configurationDialog", "Microscope specific"))
        self.quattro_elog_logbook_label.setText(_translate("configurationDialog", "Quattro ELOG logbook"))
        self.img_navacam_size_label.setText(_translate("configurationDialog", "NavCam Image size (px)"))
        self.microscope_tabs.setTabText(self.microscope_tabs.indexOf(self.quattro_tab), _translate("configurationDialog", "Quattro"))
        self.versa_elog_logbook_label.setText(_translate("configurationDialog", "Versa ELOG logbook"))
        self.microscope_tabs.setTabText(self.microscope_tabs.indexOf(self.versa_tab), _translate("configurationDialog", "Versa"))
        self.load_conf_button.setText(_translate("configurationDialog", "Load file"))
        self.save_conf_button.setText(_translate("configurationDialog", "Save file"))
        self.reset_conf_button.setText(_translate("configurationDialog", "Reset default"))
from autologbook import resource_rc
