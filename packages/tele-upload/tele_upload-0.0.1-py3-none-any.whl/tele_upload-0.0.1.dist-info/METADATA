Metadata-Version: 2.1
Name: tele-upload
Version: 0.0.1
Summary: upload files to your telegram channel or group
Home-page: https://github.com/jakbin/tele-upload
Author: Jak Bin
Author-email: jakbin4747@gmail.com
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/jakbin/tele-upload/issues
Keywords: telegram,tele-upload,telegram-api,telegram-api-bot,telegram-file-upload,elegram-upload
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Requires-Python: >=3
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests
Requires-Dist: requests-toolbelt
Requires-Dist: tqdm

# Tele-Upload

Upload files to your Telegram channel or group

 [![PyPI version](https://badge.fury.io/py/tele-upload.svg)](https://pypi.org/project/tele-upload/)
 [![Downloads](https://pepy.tech/badge/tele-upload/month)](https://pepy.tech/project/tele-upload)
 [![Downloads](https://static.pepy.tech/personalized-badge/tele-upload?period=total&units=international_system&left_color=green&right_color=blue&left_text=Total%20Downloads)](https://pepy.tech/project/tele-upload)
 ![GitHub Contributors](https://img.shields.io/github/contributors/jakbin/tele-upload)
 ![GitHub commit activity](https://img.shields.io/github/commit-activity/m/jakbin/tele-upload)
 ![GitHub last commit](https://img.shields.io/github/last-commit/jakbin/tele-upload)
 ![Python 3.6](https://img.shields.io/badge/python-3.6-yellow.svg)


## Features
- Progress bar
- You can change file name before upload on telegram


## Installation

```sh
pip3 install tele-upload
```

## Usage 
```sh
tele-upload setup                   # setup your telegram credentials
tele-upload test                    # test telegram bot token
tele-upload up {files_name}         # upload Telegram channel or group
tele-upload d {urls} ...            # download and upload Telegram channel or group
```

# API

The anonfile-upload client is also usable through an API (for test integration, automation, etc)

### tele_upload.upload([file1, file2])

```py
from tele_upload import upload

upload([file1, file2])
```

### tele_upload.download([file1, file2])

```py
from tele_upload import download

download([url1, url2])
```

