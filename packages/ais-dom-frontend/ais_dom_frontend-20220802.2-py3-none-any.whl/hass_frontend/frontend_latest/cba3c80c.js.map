{"version":3,"file":"cba3c80c.js","mappings":";;AAoBA;AAEA;AACA;;AAEA;AAEA;AAEA;AACA;;AAEA;AAEA;AAEA;AACA;;AAEA;AACA;;AAEA;;;AAIA;AACA;;;AAhCA;;;;;;;AAPA","sources":["webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-timer.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../../../components/ha-attributes\";\nimport { TimerEntity } from \"../../../data/timer\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"more-info-timer\")\nclass MoreInfoTimer extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public stateObj?: TimerEntity;\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.stateObj) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"actions\">\n        ${this.stateObj.state === \"idle\" || this.stateObj.state === \"paused\"\n          ? html`\n              <mwc-button .action=${\"start\"} @click=${this._handleActionClick}>\n                ${this.hass!.localize(\"ui.card.timer.actions.start\")}\n              </mwc-button>\n            `\n          : \"\"}\n        ${this.stateObj.state === \"active\"\n          ? html`\n              <mwc-button .action=${\"pause\"} @click=${this._handleActionClick}>\n                ${this.hass!.localize(\"ui.card.timer.actions.pause\")}\n              </mwc-button>\n            `\n          : \"\"}\n        ${this.stateObj.state === \"active\" || this.stateObj.state === \"paused\"\n          ? html`\n              <mwc-button .action=${\"cancel\"} @click=${this._handleActionClick}>\n                ${this.hass!.localize(\"ui.card.timer.actions.cancel\")}\n              </mwc-button>\n              <mwc-button .action=${\"finish\"} @click=${this._handleActionClick}>\n                ${this.hass!.localize(\"ui.card.timer.actions.finish\")}\n              </mwc-button>\n            `\n          : \"\"}\n      </div>\n      <ha-attributes\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        extra-filters=\"remaining,restore\"\n      ></ha-attributes>\n    `;\n  }\n\n  private _handleActionClick(e: MouseEvent): void {\n    const action = (e.currentTarget as any).action;\n    this.hass.callService(\"timer\", action, {\n      entity_id: this.stateObj!.entity_id,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .actions {\n        margin: 8px 0;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-timer\": MoreInfoTimer;\n  }\n}\n"],"names":[],"sourceRoot":""}