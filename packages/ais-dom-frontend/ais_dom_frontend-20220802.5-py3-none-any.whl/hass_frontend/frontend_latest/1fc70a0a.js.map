{"version":3,"file":"1fc70a0a.js","mappings":";AA0BA;;AAGA;AAGA;AACA;;;AAGA;;AAEA;AAEA;;;AAIA;;;AAIA;AACA;AAvCA","sources":["webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-remote.ts"],"sourcesContent":["import { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport \"../../../components/ha-attributes\";\nimport { RemoteEntity, REMOTE_SUPPORT_ACTIVITY } from \"../../../data/remote\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"@material/mwc-list/mwc-list-item\";\nimport \"@material/mwc-list/mwc-list\";\nimport { stopPropagation } from \"../../../common/dom/stop_propagation\";\n\nconst filterExtraAttributes = \"activity_list,current_activity\";\n\n@customElement(\"more-info-remote\")\nclass MoreInfoRemote extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public stateObj?: RemoteEntity;\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.stateObj) {\n      return html``;\n    }\n\n    const stateObj = this.stateObj;\n\n    return html`\n      ${supportsFeature(stateObj, REMOTE_SUPPORT_ACTIVITY)\n        ? html`\n            <mwc-list\n              .label=${this.hass!.localize(\n                \"ui.dialogs.more_info_control.remote.activity\"\n              )}\n              .value=${stateObj.attributes.current_activity}\n              @selected=${this.handleActivityChanged}\n              fixedMenuPosition\n              naturalMenuWidth\n              @closed=${stopPropagation}\n            >\n              ${stateObj.attributes.activity_list!.map(\n                (activity) => html`\n                  <mwc-list-item .value=${activity}>${activity}</mwc-list-item>\n                `\n              )}\n            </mwc-list>\n          `\n        : \"\"}\n\n      <ha-attributes\n        .hass=${this.hass}\n        .stateObj=${this.stateObj}\n        .extraFilters=${filterExtraAttributes}\n      ></ha-attributes>\n    `;\n  }\n\n  private handleActivityChanged(ev) {\n    const oldVal = this.stateObj!.attributes.current_activity;\n    const newVal = ev.target.value;\n\n    if (!newVal || oldVal === newVal) {\n      return;\n    }\n\n    this.hass.callService(\"remote\", \"turn_on\", {\n      entity_id: this.stateObj!.entity_id,\n      activity: newVal,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-remote\": MoreInfoRemote;\n  }\n}\n"],"names":[],"sourceRoot":""}