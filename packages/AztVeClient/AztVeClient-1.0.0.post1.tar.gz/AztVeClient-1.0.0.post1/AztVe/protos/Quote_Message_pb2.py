# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Thoth.Quote.Message.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19Thoth.Quote.Message.proto\x12\x0bThoth.Quote\x1a\x19google/protobuf/any.proto\".\n\x10QuoteRegisterMsg\x12\x1a\n\x12\x65xchange_securitys\x18\x01 \x01(\t\"P\n\x0fSecurityInfoRsp\x12=\n\x14security_static_info\x18\x01 \x03(\x0b\x32\x1f.Thoth.Quote.SecurityStaticInfo\"\xed\x01\n\x12SecurityStaticInfo\x12\x0e\n\x06market\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x31\n\rsecurity_type\x18\x03 \x01(\x0e\x32\x1a.Thoth.Quote.ESecurityType\x12\x12\n\nprice_tick\x18\x0b \x01(\x05\x12\x14\n\x0c\x62uy_qty_unit\x18\x0c \x01(\x05\x12\x15\n\rsell_qty_unit\x18\r \x01(\x05\x12(\n\nextra_data\x18\x14 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x1b\n\x13price_decimal_place\x18\x1e \x01(\x05\"\xc3\x03\n\x11SecurityExtraData\x12\x15\n\rsecurity_name\x18\x01 \x01(\t\x12\x12\n\nproduct_id\x18\x02 \x01(\t\x12\x14\n\x0cproduct_name\x18\x03 \x01(\t\x12\x14\n\x0coptions_type\x18\x04 \x01(\t\x12\x15\n\rdelivery_year\x18\x05 \x01(\t\x12\x16\n\x0e\x64\x65livery_month\x18\x06 \x01(\t\x12\x1a\n\x12is_max_margin_side\x18\x07 \x01(\x08\x12\x11\n\topen_date\x18\x08 \x01(\t\x12\x13\n\x0b\x65xpire_date\x18\t \x01(\t\x12\x10\n\x08multiple\x18\n \x01(\x05\x12\x19\n\x11long_margin_ratio\x18\x0b \x01(\x05\x12\x1a\n\x12short_margin_ratio\x18\x0c \x01(\x05\x12\x14\n\x0cstrike_price\x18\r \x01(\x03\x12\x19\n\x11max_market_volume\x18\x0e \x01(\x03\x12\x19\n\x11min_market_volume\x18\x0f \x01(\x03\x12\x18\n\x10max_limit_volume\x18\x10 \x01(\x03\x12\x18\n\x10min_limit_volume\x18\x11 \x01(\x03\x12\x1b\n\x13ratio_decimal_place\x18\x1e \x01(\x05\"\x1a\n\tTimeStamp\x12\r\n\x05ptime\x18\x01 \x01(\t\"\xa8\x06\n\x0cQuoteBaseMsg\x12\x0e\n\x06market\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x31\n\rsecurity_type\x18\x03 \x01(\x0e\x32\x1a.Thoth.Quote.ESecurityType\x12\x0c\n\x04open\x18\x0b \x01(\x03\x12\x0c\n\x04high\x18\x0c \x01(\x03\x12\x0b\n\x03low\x18\r \x01(\x03\x12\x0c\n\x04last\x18\x0e \x01(\x03\x12\x11\n\tpre_close\x18\x0f \x01(\x03\x12\r\n\x05\x63lose\x18\x10 \x01(\x03\x12\x13\n\x0bupper_limit\x18\x11 \x01(\x03\x12\x13\n\x0blower_limit\x18\x12 \x01(\x03\x12\x14\n\x0ctotal_amount\x18\x16 \x01(\x03\x12\x13\n\x0blast_volume\x18\x17 \x01(\x03\x12\x11\n\tavg_price\x18\x18 \x01(\x03\x12:\n\tbid_price\x18# \x03(\x0b\x32\'.Thoth.Quote.QuoteBaseMsg.BidPriceEntry\x12:\n\task_price\x18$ \x03(\x0b\x32\'.Thoth.Quote.QuoteBaseMsg.AskPriceEntry\x12<\n\nbid_volume\x18% \x03(\x0b\x32(.Thoth.Quote.QuoteBaseMsg.BidVolumeEntry\x12<\n\nask_volume\x18& \x03(\x0b\x32(.Thoth.Quote.QuoteBaseMsg.AskVolumeEntry\x12\x11\n\tdata_time\x18\' \x01(\t\x12\x1b\n\x13price_decimal_place\x18\x65 \x01(\x05\x12\x1c\n\x14\x61mount_decimal_place\x18\x66 \x01(\x05\x1a/\n\rBidPriceEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a/\n\rAskPriceEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x30\n\x0e\x42idVolumeEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x30\n\x0e\x41skVolumeEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\xf6\x05\n\x0fQuoteStockExtra\x12\x15\n\rtotal_bid_qty\x18\x01 \x01(\x03\x12\x15\n\rtotal_ask_qty\x18\x02 \x01(\x03\x12\x14\n\x0cma_bid_price\x18\x03 \x01(\x03\x12\x14\n\x0cma_ask_price\x18\x04 \x01(\x03\x12\x19\n\x11ma_bond_bid_price\x18\x05 \x01(\x03\x12\x19\n\x11ma_bond_ask_price\x18\x06 \x01(\x03\x12\x19\n\x11yield_to_maturity\x18\x07 \x01(\x03\x12\x0c\n\x04iopv\x18\x08 \x01(\x03\x12\x15\n\retf_buy_count\x18\t \x01(\x05\x12\x16\n\x0e\x65tf_sell_count\x18\n \x01(\x05\x12\x13\n\x0b\x65tf_buy_qty\x18\x0b \x01(\x03\x12\x15\n\retf_buy_money\x18\x0c \x01(\x03\x12\x14\n\x0c\x65tf_sell_qty\x18\r \x01(\x03\x12\x16\n\x0e\x65tf_sell_money\x18\x0e \x01(\x03\x12\x1e\n\x16total_warrant_exec_qty\x18\x0f \x01(\x03\x12\x1b\n\x13warrant_lower_price\x18\x10 \x01(\x03\x12\x1b\n\x13warrant_upper_price\x18\x11 \x01(\x03\x12\x18\n\x10\x63\x61ncel_buy_count\x18\x12 \x01(\x05\x12\x19\n\x11\x63\x61ncel_sell_count\x18\x13 \x01(\x05\x12\x16\n\x0e\x63\x61ncel_buy_qty\x18\x14 \x01(\x03\x12\x17\n\x0f\x63\x61ncel_sell_qty\x18\x15 \x01(\x03\x12\x18\n\x10\x63\x61ncel_buy_money\x18\x16 \x01(\x03\x12\x19\n\x11\x63\x61ncel_sell_money\x18\x17 \x01(\x03\x12\x17\n\x0ftotal_buy_count\x18\x18 \x01(\x03\x12\x18\n\x10total_sell_count\x18\x19 \x01(\x03\x12\x1a\n\x12\x64uration_after_buy\x18\x1a \x01(\x05\x12\x1b\n\x13\x64uration_after_sell\x18\x1b \x01(\x05\x12\x16\n\x0enum_bid_orders\x18\x1c \x01(\x05\x12\x16\n\x0enum_ask_orders\x18\x1d \x01(\x05\x12\x10\n\x08pre_iopv\x18\x1e \x01(\x01\"\xdc\x01\n\x16QuoteFutureOptionExtra\x12\x0e\n\x06settle\x18\x01 \x01(\x03\x12\x12\n\npre_settle\x18\x02 \x01(\x03\x12\x15\n\rtotal_positon\x18\x03 \x01(\x03\x12\x19\n\x11pre_total_positon\x18\x04 \x01(\x03\x12\x11\n\tpre_delta\x18\x05 \x01(\x03\x12\x12\n\ncurr_delta\x18\x06 \x01(\x03\x12\x15\n\rauction_price\x18\x07 \x01(\x05\x12\x13\n\x0b\x61uction_qty\x18\x08 \x01(\x05\x12\x19\n\x11last_enquiry_time\x18\t \x01(\t\"\x98\x01\n\x08QuoteMsg\x12/\n\tdata_type\x18\x01 \x01(\x0e\x32\x1c.Thoth.Quote.EMarketDataType\x12\x31\n\x0eqoute_base_msg\x18\x02 \x01(\x0b\x32\x19.Thoth.Quote.QuoteBaseMsg\x12(\n\nextra_data\x18\x03 \x01(\x0b\x32\x14.google.protobuf.Any\"?\n\x10QuoteRegisterRsp\x12\x1a\n\x12\x65xchange_securitys\x18\x01 \x01(\t\x12\x0f\n\x07succeed\x18\x02 \x01(\x08\"\xc0\x05\n\rQuoteBaseData\x12\x0e\n\x06market\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04open\x18\x0b \x01(\x01\x12\x0c\n\x04high\x18\x0c \x01(\x01\x12\x0b\n\x03low\x18\r \x01(\x01\x12\x0c\n\x04last\x18\x0e \x01(\x01\x12\x11\n\tpre_close\x18\x0f \x01(\x01\x12\r\n\x05\x63lose\x18\x10 \x01(\x01\x12\x13\n\x0bupper_limit\x18\x11 \x01(\x01\x12\x13\n\x0blower_limit\x18\x12 \x01(\x01\x12\x14\n\x0ctoday_amount\x18\x16 \x01(\x01\x12\x14\n\x0ctoday_volume\x18\x17 \x01(\x03\x12\x11\n\tavg_price\x18\x18 \x01(\x01\x12;\n\tbid_price\x18# \x03(\x0b\x32(.Thoth.Quote.QuoteBaseData.BidPriceEntry\x12;\n\task_price\x18$ \x03(\x0b\x32(.Thoth.Quote.QuoteBaseData.AskPriceEntry\x12=\n\nbid_volume\x18% \x03(\x0b\x32).Thoth.Quote.QuoteBaseData.BidVolumeEntry\x12=\n\nask_volume\x18& \x03(\x0b\x32).Thoth.Quote.QuoteBaseData.AskVolumeEntry\x12\x11\n\tdata_time\x18\' \x01(\t\x1a/\n\rBidPriceEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a/\n\rAskPriceEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\x1a\x30\n\x0e\x42idVolumeEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x30\n\x0e\x41skVolumeEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\xf7\x05\n\x10QuoteStockExData\x12\x15\n\rtotal_bid_qty\x18\x01 \x01(\x03\x12\x15\n\rtotal_ask_qty\x18\x02 \x01(\x03\x12\x14\n\x0cma_bid_price\x18\x03 \x01(\x01\x12\x14\n\x0cma_ask_price\x18\x04 \x01(\x01\x12\x19\n\x11ma_bond_bid_price\x18\x05 \x01(\x01\x12\x19\n\x11ma_bond_ask_price\x18\x06 \x01(\x01\x12\x19\n\x11yield_to_maturity\x18\x07 \x01(\x01\x12\x0c\n\x04iopv\x18\x08 \x01(\x01\x12\x15\n\retf_buy_count\x18\t \x01(\x05\x12\x16\n\x0e\x65tf_sell_count\x18\n \x01(\x05\x12\x13\n\x0b\x65tf_buy_qty\x18\x0b \x01(\x01\x12\x15\n\retf_buy_money\x18\x0c \x01(\x01\x12\x14\n\x0c\x65tf_sell_qty\x18\r \x01(\x01\x12\x16\n\x0e\x65tf_sell_money\x18\x0e \x01(\x01\x12\x1e\n\x16total_warrant_exec_qty\x18\x0f \x01(\x01\x12\x1b\n\x13warrant_lower_price\x18\x10 \x01(\x01\x12\x1b\n\x13warrant_upper_price\x18\x11 \x01(\x01\x12\x18\n\x10\x63\x61ncel_buy_count\x18\x12 \x01(\x05\x12\x19\n\x11\x63\x61ncel_sell_count\x18\x13 \x01(\x05\x12\x16\n\x0e\x63\x61ncel_buy_qty\x18\x14 \x01(\x01\x12\x17\n\x0f\x63\x61ncel_sell_qty\x18\x15 \x01(\x01\x12\x18\n\x10\x63\x61ncel_buy_money\x18\x16 \x01(\x01\x12\x19\n\x11\x63\x61ncel_sell_money\x18\x17 \x01(\x01\x12\x17\n\x0ftotal_buy_count\x18\x18 \x01(\x03\x12\x18\n\x10total_sell_count\x18\x19 \x01(\x03\x12\x1a\n\x12\x64uration_after_buy\x18\x1a \x01(\x05\x12\x1b\n\x13\x64uration_after_sell\x18\x1b \x01(\x05\x12\x16\n\x0enum_bid_orders\x18\x1c \x01(\x05\x12\x16\n\x0enum_ask_orders\x18\x1d \x01(\x05\x12\x10\n\x08pre_iopv\x18\x1e \x01(\x01\"\x98\x01\n\tQuoteData\x12\x32\n\tdata_type\x18\x01 \x01(\x0e\x32\x1f.Thoth.Quote.EMarketDataType_V2\x12-\n\tbase_data\x18\x02 \x01(\x0b\x32\x1a.Thoth.Quote.QuoteBaseData\x12(\n\nextra_data\x18\x03 \x01(\x0b\x32\x14.google.protobuf.Any\"\\\n\x14TcpConnectionConfirm\x12\x11\n\ttcp_owner\x18\x01 \x01(\t\x12\x0f\n\x07use_udp\x18\x02 \x01(\x08\x12\x0e\n\x06udp_ip\x18\x03 \x01(\t\x12\x10\n\x08udp_port\x18\x04 \x01(\x05\")\n\x14UdpConnectionConfirm\x12\x11\n\ttcp_owner\x18\x01 \x01(\t*\x83\x02\n\x0b\x45QuoteMsgID\x12\x17\n\x13KQuoteMsgID_Unknown\x10\x00\x12\x1d\n\x19KQuoteMsgID_QuoteRegister\x10\x01\x12\x1a\n\x16KQuoteMsgID_UnRegister\x10\x02\x12\x1a\n\x16KQuoteMsgID_QuoteQuery\x10\x03\x12\x19\n\x15KQuoteMsgID_TimeStamp\x10\x04\x12\x1d\n\x19KQuoteMsgID_QuoteSnapshot\x10\x05\x12$\n KQuoteMsgID_QuerySecurityInfoReq\x10\x06\x12$\n KQuoteMsgID_QuerySecurityInfoRsp\x10\x07*\x83\x01\n\x0f\x45MarketDataType\x12\x1b\n\x17KMarketDataType_Unknown\x10\x00\x12\x1a\n\x16KMarketDataType_Actual\x10\x01\x12\x1b\n\x17KMarketDataType_SOption\x10\x02\x12\x1a\n\x16KMarketDataType_Future\x10\x03*\xff\x01\n\rESecurityType\x12\x19\n\x15KSecurityType_Unknown\x10\x00\x12\x17\n\x13KSecurityType_Stock\x10\x01\x12\x18\n\x14KSecurityType_Option\x10\x02\x12\x16\n\x12KSecurityType_Fund\x10\x03\x12\x17\n\x13KSecurityType_Index\x10\x04\x12\x16\n\x12KSecurityType_Bond\x10\x05\x12\x18\n\x14KSecurityType_Future\x10\x06\x12\x1e\n\x1aKSecurityType_FutureOption\x10\x07\x12\x1d\n\x19KSecurityType_IndexFuture\x10\x08*\xa7\x01\n\rEQuoteMsgType\x12\x19\n\x15KQuoteMsgType_Unknown\x10\x00\x12 \n\x1cKQuoteMsgType_TcpConnConfirm\x10\x01\x12 \n\x1cKQuoteMsgType_UdpConnConfirm\x10\x02\x12\x1b\n\x17KQuoteMsgType_HeartBeat\x10\x03\x12\x1a\n\x16KQuoteMsgType_RealTime\x10\x04*\xad\x01\n\x12\x45MarketDataType_V2\x12\x1e\n\x1aKMarketDataType_V2_Unknown\x10\x00\x12\x1c\n\x18KMarketDataType_V2_Index\x10\x01\x12\x1d\n\x19KMarketDataType_V2_Option\x10\x02\x12\x1d\n\x19KMarketDataType_V2_Actual\x10\x03\x12\x1b\n\x17KMarketDataType_V2_Bond\x10\x04\x62\x06proto3')

_EQUOTEMSGID = DESCRIPTOR.enum_types_by_name['EQuoteMsgID']
EQuoteMsgID = enum_type_wrapper.EnumTypeWrapper(_EQUOTEMSGID)
_EMARKETDATATYPE = DESCRIPTOR.enum_types_by_name['EMarketDataType']
EMarketDataType = enum_type_wrapper.EnumTypeWrapper(_EMARKETDATATYPE)
_ESECURITYTYPE = DESCRIPTOR.enum_types_by_name['ESecurityType']
ESecurityType = enum_type_wrapper.EnumTypeWrapper(_ESECURITYTYPE)
_EQUOTEMSGTYPE = DESCRIPTOR.enum_types_by_name['EQuoteMsgType']
EQuoteMsgType = enum_type_wrapper.EnumTypeWrapper(_EQUOTEMSGTYPE)
_EMARKETDATATYPE_V2 = DESCRIPTOR.enum_types_by_name['EMarketDataType_V2']
EMarketDataType_V2 = enum_type_wrapper.EnumTypeWrapper(_EMARKETDATATYPE_V2)
KQuoteMsgID_Unknown = 0
KQuoteMsgID_QuoteRegister = 1
KQuoteMsgID_UnRegister = 2
KQuoteMsgID_QuoteQuery = 3
KQuoteMsgID_TimeStamp = 4
KQuoteMsgID_QuoteSnapshot = 5
KQuoteMsgID_QuerySecurityInfoReq = 6
KQuoteMsgID_QuerySecurityInfoRsp = 7
KMarketDataType_Unknown = 0
KMarketDataType_Actual = 1
KMarketDataType_SOption = 2
KMarketDataType_Future = 3
KSecurityType_Unknown = 0
KSecurityType_Stock = 1
KSecurityType_Option = 2
KSecurityType_Fund = 3
KSecurityType_Index = 4
KSecurityType_Bond = 5
KSecurityType_Future = 6
KSecurityType_FutureOption = 7
KSecurityType_IndexFuture = 8
KQuoteMsgType_Unknown = 0
KQuoteMsgType_TcpConnConfirm = 1
KQuoteMsgType_UdpConnConfirm = 2
KQuoteMsgType_HeartBeat = 3
KQuoteMsgType_RealTime = 4
KMarketDataType_V2_Unknown = 0
KMarketDataType_V2_Index = 1
KMarketDataType_V2_Option = 2
KMarketDataType_V2_Actual = 3
KMarketDataType_V2_Bond = 4


_QUOTEREGISTERMSG = DESCRIPTOR.message_types_by_name['QuoteRegisterMsg']
_SECURITYINFORSP = DESCRIPTOR.message_types_by_name['SecurityInfoRsp']
_SECURITYSTATICINFO = DESCRIPTOR.message_types_by_name['SecurityStaticInfo']
_SECURITYEXTRADATA = DESCRIPTOR.message_types_by_name['SecurityExtraData']
_TIMESTAMP = DESCRIPTOR.message_types_by_name['TimeStamp']
_QUOTEBASEMSG = DESCRIPTOR.message_types_by_name['QuoteBaseMsg']
_QUOTEBASEMSG_BIDPRICEENTRY = _QUOTEBASEMSG.nested_types_by_name['BidPriceEntry']
_QUOTEBASEMSG_ASKPRICEENTRY = _QUOTEBASEMSG.nested_types_by_name['AskPriceEntry']
_QUOTEBASEMSG_BIDVOLUMEENTRY = _QUOTEBASEMSG.nested_types_by_name['BidVolumeEntry']
_QUOTEBASEMSG_ASKVOLUMEENTRY = _QUOTEBASEMSG.nested_types_by_name['AskVolumeEntry']
_QUOTESTOCKEXTRA = DESCRIPTOR.message_types_by_name['QuoteStockExtra']
_QUOTEFUTUREOPTIONEXTRA = DESCRIPTOR.message_types_by_name['QuoteFutureOptionExtra']
_QUOTEMSG = DESCRIPTOR.message_types_by_name['QuoteMsg']
_QUOTEREGISTERRSP = DESCRIPTOR.message_types_by_name['QuoteRegisterRsp']
_QUOTEBASEDATA = DESCRIPTOR.message_types_by_name['QuoteBaseData']
_QUOTEBASEDATA_BIDPRICEENTRY = _QUOTEBASEDATA.nested_types_by_name['BidPriceEntry']
_QUOTEBASEDATA_ASKPRICEENTRY = _QUOTEBASEDATA.nested_types_by_name['AskPriceEntry']
_QUOTEBASEDATA_BIDVOLUMEENTRY = _QUOTEBASEDATA.nested_types_by_name['BidVolumeEntry']
_QUOTEBASEDATA_ASKVOLUMEENTRY = _QUOTEBASEDATA.nested_types_by_name['AskVolumeEntry']
_QUOTESTOCKEXDATA = DESCRIPTOR.message_types_by_name['QuoteStockExData']
_QUOTEDATA = DESCRIPTOR.message_types_by_name['QuoteData']
_TCPCONNECTIONCONFIRM = DESCRIPTOR.message_types_by_name['TcpConnectionConfirm']
_UDPCONNECTIONCONFIRM = DESCRIPTOR.message_types_by_name['UdpConnectionConfirm']
QuoteRegisterMsg = _reflection.GeneratedProtocolMessageType('QuoteRegisterMsg', (_message.Message,), {
  'DESCRIPTOR' : _QUOTEREGISTERMSG,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteRegisterMsg)
  })
_sym_db.RegisterMessage(QuoteRegisterMsg)

SecurityInfoRsp = _reflection.GeneratedProtocolMessageType('SecurityInfoRsp', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYINFORSP,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.SecurityInfoRsp)
  })
_sym_db.RegisterMessage(SecurityInfoRsp)

SecurityStaticInfo = _reflection.GeneratedProtocolMessageType('SecurityStaticInfo', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYSTATICINFO,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.SecurityStaticInfo)
  })
_sym_db.RegisterMessage(SecurityStaticInfo)

SecurityExtraData = _reflection.GeneratedProtocolMessageType('SecurityExtraData', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYEXTRADATA,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.SecurityExtraData)
  })
_sym_db.RegisterMessage(SecurityExtraData)

TimeStamp = _reflection.GeneratedProtocolMessageType('TimeStamp', (_message.Message,), {
  'DESCRIPTOR' : _TIMESTAMP,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.TimeStamp)
  })
_sym_db.RegisterMessage(TimeStamp)

QuoteBaseMsg = _reflection.GeneratedProtocolMessageType('QuoteBaseMsg', (_message.Message,), {

  'BidPriceEntry' : _reflection.GeneratedProtocolMessageType('BidPriceEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEMSG_BIDPRICEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseMsg.BidPriceEntry)
    })
  ,

  'AskPriceEntry' : _reflection.GeneratedProtocolMessageType('AskPriceEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEMSG_ASKPRICEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseMsg.AskPriceEntry)
    })
  ,

  'BidVolumeEntry' : _reflection.GeneratedProtocolMessageType('BidVolumeEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEMSG_BIDVOLUMEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseMsg.BidVolumeEntry)
    })
  ,

  'AskVolumeEntry' : _reflection.GeneratedProtocolMessageType('AskVolumeEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEMSG_ASKVOLUMEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseMsg.AskVolumeEntry)
    })
  ,
  'DESCRIPTOR' : _QUOTEBASEMSG,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseMsg)
  })
_sym_db.RegisterMessage(QuoteBaseMsg)
_sym_db.RegisterMessage(QuoteBaseMsg.BidPriceEntry)
_sym_db.RegisterMessage(QuoteBaseMsg.AskPriceEntry)
_sym_db.RegisterMessage(QuoteBaseMsg.BidVolumeEntry)
_sym_db.RegisterMessage(QuoteBaseMsg.AskVolumeEntry)

QuoteStockExtra = _reflection.GeneratedProtocolMessageType('QuoteStockExtra', (_message.Message,), {
  'DESCRIPTOR' : _QUOTESTOCKEXTRA,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteStockExtra)
  })
_sym_db.RegisterMessage(QuoteStockExtra)

QuoteFutureOptionExtra = _reflection.GeneratedProtocolMessageType('QuoteFutureOptionExtra', (_message.Message,), {
  'DESCRIPTOR' : _QUOTEFUTUREOPTIONEXTRA,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteFutureOptionExtra)
  })
_sym_db.RegisterMessage(QuoteFutureOptionExtra)

QuoteMsg = _reflection.GeneratedProtocolMessageType('QuoteMsg', (_message.Message,), {
  'DESCRIPTOR' : _QUOTEMSG,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteMsg)
  })
_sym_db.RegisterMessage(QuoteMsg)

QuoteRegisterRsp = _reflection.GeneratedProtocolMessageType('QuoteRegisterRsp', (_message.Message,), {
  'DESCRIPTOR' : _QUOTEREGISTERRSP,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteRegisterRsp)
  })
_sym_db.RegisterMessage(QuoteRegisterRsp)

QuoteBaseData = _reflection.GeneratedProtocolMessageType('QuoteBaseData', (_message.Message,), {

  'BidPriceEntry' : _reflection.GeneratedProtocolMessageType('BidPriceEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEDATA_BIDPRICEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseData.BidPriceEntry)
    })
  ,

  'AskPriceEntry' : _reflection.GeneratedProtocolMessageType('AskPriceEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEDATA_ASKPRICEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseData.AskPriceEntry)
    })
  ,

  'BidVolumeEntry' : _reflection.GeneratedProtocolMessageType('BidVolumeEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEDATA_BIDVOLUMEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseData.BidVolumeEntry)
    })
  ,

  'AskVolumeEntry' : _reflection.GeneratedProtocolMessageType('AskVolumeEntry', (_message.Message,), {
    'DESCRIPTOR' : _QUOTEBASEDATA_ASKVOLUMEENTRY,
    '__module__' : 'Thoth.Quote.Message_pb2'
    # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseData.AskVolumeEntry)
    })
  ,
  'DESCRIPTOR' : _QUOTEBASEDATA,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteBaseData)
  })
_sym_db.RegisterMessage(QuoteBaseData)
_sym_db.RegisterMessage(QuoteBaseData.BidPriceEntry)
_sym_db.RegisterMessage(QuoteBaseData.AskPriceEntry)
_sym_db.RegisterMessage(QuoteBaseData.BidVolumeEntry)
_sym_db.RegisterMessage(QuoteBaseData.AskVolumeEntry)

QuoteStockExData = _reflection.GeneratedProtocolMessageType('QuoteStockExData', (_message.Message,), {
  'DESCRIPTOR' : _QUOTESTOCKEXDATA,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteStockExData)
  })
_sym_db.RegisterMessage(QuoteStockExData)

QuoteData = _reflection.GeneratedProtocolMessageType('QuoteData', (_message.Message,), {
  'DESCRIPTOR' : _QUOTEDATA,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.QuoteData)
  })
_sym_db.RegisterMessage(QuoteData)

TcpConnectionConfirm = _reflection.GeneratedProtocolMessageType('TcpConnectionConfirm', (_message.Message,), {
  'DESCRIPTOR' : _TCPCONNECTIONCONFIRM,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.TcpConnectionConfirm)
  })
_sym_db.RegisterMessage(TcpConnectionConfirm)

UdpConnectionConfirm = _reflection.GeneratedProtocolMessageType('UdpConnectionConfirm', (_message.Message,), {
  'DESCRIPTOR' : _UDPCONNECTIONCONFIRM,
  '__module__' : 'Thoth.Quote.Message_pb2'
  # @@protoc_insertion_point(class_scope:Thoth.Quote.UdpConnectionConfirm)
  })
_sym_db.RegisterMessage(UdpConnectionConfirm)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _QUOTEBASEMSG_BIDPRICEENTRY._options = None
  _QUOTEBASEMSG_BIDPRICEENTRY._serialized_options = b'8\001'
  _QUOTEBASEMSG_ASKPRICEENTRY._options = None
  _QUOTEBASEMSG_ASKPRICEENTRY._serialized_options = b'8\001'
  _QUOTEBASEMSG_BIDVOLUMEENTRY._options = None
  _QUOTEBASEMSG_BIDVOLUMEENTRY._serialized_options = b'8\001'
  _QUOTEBASEMSG_ASKVOLUMEENTRY._options = None
  _QUOTEBASEMSG_ASKVOLUMEENTRY._serialized_options = b'8\001'
  _QUOTEBASEDATA_BIDPRICEENTRY._options = None
  _QUOTEBASEDATA_BIDPRICEENTRY._serialized_options = b'8\001'
  _QUOTEBASEDATA_ASKPRICEENTRY._options = None
  _QUOTEBASEDATA_ASKPRICEENTRY._serialized_options = b'8\001'
  _QUOTEBASEDATA_BIDVOLUMEENTRY._options = None
  _QUOTEBASEDATA_BIDVOLUMEENTRY._serialized_options = b'8\001'
  _QUOTEBASEDATA_ASKVOLUMEENTRY._options = None
  _QUOTEBASEDATA_ASKVOLUMEENTRY._serialized_options = b'8\001'
  _EQUOTEMSGID._serialized_start=4698
  _EQUOTEMSGID._serialized_end=4957
  _EMARKETDATATYPE._serialized_start=4960
  _EMARKETDATATYPE._serialized_end=5091
  _ESECURITYTYPE._serialized_start=5094
  _ESECURITYTYPE._serialized_end=5349
  _EQUOTEMSGTYPE._serialized_start=5352
  _EQUOTEMSGTYPE._serialized_end=5519
  _EMARKETDATATYPE_V2._serialized_start=5522
  _EMARKETDATATYPE_V2._serialized_end=5695
  _QUOTEREGISTERMSG._serialized_start=69
  _QUOTEREGISTERMSG._serialized_end=115
  _SECURITYINFORSP._serialized_start=117
  _SECURITYINFORSP._serialized_end=197
  _SECURITYSTATICINFO._serialized_start=200
  _SECURITYSTATICINFO._serialized_end=437
  _SECURITYEXTRADATA._serialized_start=440
  _SECURITYEXTRADATA._serialized_end=891
  _TIMESTAMP._serialized_start=893
  _TIMESTAMP._serialized_end=919
  _QUOTEBASEMSG._serialized_start=922
  _QUOTEBASEMSG._serialized_end=1730
  _QUOTEBASEMSG_BIDPRICEENTRY._serialized_start=1534
  _QUOTEBASEMSG_BIDPRICEENTRY._serialized_end=1581
  _QUOTEBASEMSG_ASKPRICEENTRY._serialized_start=1583
  _QUOTEBASEMSG_ASKPRICEENTRY._serialized_end=1630
  _QUOTEBASEMSG_BIDVOLUMEENTRY._serialized_start=1632
  _QUOTEBASEMSG_BIDVOLUMEENTRY._serialized_end=1680
  _QUOTEBASEMSG_ASKVOLUMEENTRY._serialized_start=1682
  _QUOTEBASEMSG_ASKVOLUMEENTRY._serialized_end=1730
  _QUOTESTOCKEXTRA._serialized_start=1733
  _QUOTESTOCKEXTRA._serialized_end=2491
  _QUOTEFUTUREOPTIONEXTRA._serialized_start=2494
  _QUOTEFUTUREOPTIONEXTRA._serialized_end=2714
  _QUOTEMSG._serialized_start=2717
  _QUOTEMSG._serialized_end=2869
  _QUOTEREGISTERRSP._serialized_start=2871
  _QUOTEREGISTERRSP._serialized_end=2934
  _QUOTEBASEDATA._serialized_start=2937
  _QUOTEBASEDATA._serialized_end=3641
  _QUOTEBASEDATA_BIDPRICEENTRY._serialized_start=3445
  _QUOTEBASEDATA_BIDPRICEENTRY._serialized_end=3492
  _QUOTEBASEDATA_ASKPRICEENTRY._serialized_start=3494
  _QUOTEBASEDATA_ASKPRICEENTRY._serialized_end=3541
  _QUOTEBASEDATA_BIDVOLUMEENTRY._serialized_start=1632
  _QUOTEBASEDATA_BIDVOLUMEENTRY._serialized_end=1680
  _QUOTEBASEDATA_ASKVOLUMEENTRY._serialized_start=1682
  _QUOTEBASEDATA_ASKVOLUMEENTRY._serialized_end=1730
  _QUOTESTOCKEXDATA._serialized_start=3644
  _QUOTESTOCKEXDATA._serialized_end=4403
  _QUOTEDATA._serialized_start=4406
  _QUOTEDATA._serialized_end=4558
  _TCPCONNECTIONCONFIRM._serialized_start=4560
  _TCPCONNECTIONCONFIRM._serialized_end=4652
  _UDPCONNECTIONCONFIRM._serialized_start=4654
  _UDPCONNECTIONCONFIRM._serialized_end=4695
# @@protoc_insertion_point(module_scope)
