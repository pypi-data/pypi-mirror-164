"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class BinaryOp(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Kind:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _KindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BinaryOp._Kind.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: BinaryOp._Kind.ValueType  # 0
        ADD: BinaryOp._Kind.ValueType  # 1
        MUL: BinaryOp._Kind.ValueType  # 2
        DIV: BinaryOp._Kind.ValueType  # 3
        POW: BinaryOp._Kind.ValueType  # 4
        MOD: BinaryOp._Kind.ValueType  # 5
        RANGE: BinaryOp._Kind.ValueType  # 6
        EQ: BinaryOp._Kind.ValueType  # 7
        NOT_EQ: BinaryOp._Kind.ValueType  # 8
        LESS_THAN: BinaryOp._Kind.ValueType  # 9
        LESS_THAN_EQ: BinaryOp._Kind.ValueType  # 10
        AND: BinaryOp._Kind.ValueType  # 11
        OR: BinaryOp._Kind.ValueType  # 12
        XOR: BinaryOp._Kind.ValueType  # 13
    class Kind(_Kind, metaclass=_KindEnumTypeWrapper):
        pass

    UNKNOWN: BinaryOp.Kind.ValueType  # 0
    ADD: BinaryOp.Kind.ValueType  # 1
    MUL: BinaryOp.Kind.ValueType  # 2
    DIV: BinaryOp.Kind.ValueType  # 3
    POW: BinaryOp.Kind.ValueType  # 4
    MOD: BinaryOp.Kind.ValueType  # 5
    RANGE: BinaryOp.Kind.ValueType  # 6
    EQ: BinaryOp.Kind.ValueType  # 7
    NOT_EQ: BinaryOp.Kind.ValueType  # 8
    LESS_THAN: BinaryOp.Kind.ValueType  # 9
    LESS_THAN_EQ: BinaryOp.Kind.ValueType  # 10
    AND: BinaryOp.Kind.ValueType  # 11
    OR: BinaryOp.Kind.ValueType  # 12
    XOR: BinaryOp.Kind.ValueType  # 13

    KIND_FIELD_NUMBER: builtins.int
    kind: global___BinaryOp.Kind.ValueType
    def __init__(self,
        *,
        kind: global___BinaryOp.Kind.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind"]) -> None: ...
global___BinaryOp = BinaryOp
