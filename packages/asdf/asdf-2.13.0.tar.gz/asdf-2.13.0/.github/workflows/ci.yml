name: CI

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 6am UTC
    - cron: '0 6 * * 1'
  push:
    branches:
      - master
      - stable
      - '*.x'
    tags:
      - '*'
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      requirements-hash: ${{ steps.requirements-hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v3
      - id: requirements-hash
        run: echo "::set-output name=hash::${{ hashFiles('**/pyproject.toml', '**/setup.*', 'tox.ini') }}"

  core:
    needs: [setup]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.10'
      envs: |
        - linux: coverage
      coverage: codecov

  test:
    needs: [core, asdf-standard]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: py38
        - linux: py39
        - macos: py39
        - windows: py39

  compatibility:
    needs: [core, asdf-standard]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: compatibility
        - linux: docbuild
          libraries:
            apt:
              - graphviz
        - linux: warnings

  external:
    needs: [test, compatibility]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: py39-astropydev
        - linux: py39-asdfastropydev
        - linux: py39-gwcsdev
        - linux: py39-numpydev
        - linux: py39-asdfstandarddev
        - linux: py39-asdftransformschemasdev
        - linux: py39-asdfwcsschemasdev
        - linux: py39-asdfcoordinatesschemasdev

  package:
    needs: [external]
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      cache-path: ~/.cache/pip
      cache-key: pip-${{ needs.setup.outputs.requirements-hash }}
      cache-restore-keys: |
        pip-
      # Any env name which does not start with `pyXY` will use this Python version.
      default_python: '3.9'
      envs: |
        - linux: twine
        - linux: prerelease
        - linux: packaged

  asdf-standard:
    name: Run asdf-standard tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout asdf
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: asdf
      - name: Checkout asdf-standard
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: asdf-format/asdf-standard
          ref: master
          path: asdf-standard
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install asdf
        run: cd asdf && pip install .
      - name: Install asdf-standard
        run: cd asdf-standard && pip install -e .[test]
      - name: Pip Freeze
        run: pip freeze
      - name: Run asdf-standard tests
        run: cd asdf-standard && pytest
